<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>枫叶冢</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>只有努力不会辜负你</description>
    <pubDate>Sat, 19 Nov 2022 04:22:44 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>把jar包打包成exe</title>
      <link>http://example.com/2022/11/19/jar%E5%88%B0exe/</link>
      <guid>http://example.com/2022/11/19/jar%E5%88%B0exe/</guid>
      <pubDate>Sat, 19 Nov 2022 03:40:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerlink&quot; title=&quot;使用工具&quot;&gt;&lt;/a&gt;使用工具&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;我们所使用的工具是exe4j 和 inno setup&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;exe4j&quot;&gt;&lt;a</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h1><ul><li>我们所使用的工具是exe4j 和 inno setup</li></ul><h2 id="exe4j"><a href="#exe4j" class="headerlink" title="exe4j"></a>exe4j</h2><ul><li>简单来说这个就是个工具，可以把java的jar包打包成exe的</li><li>可以让其他由java运行环境的机器运行这个jar</li><li>而且还可以稍微做到保密的程度</li><li>exe4j 是一个帮助你集成 Java 应用程序到 Windows 操作环境的 java 可执行文件生成工具，无论这些应用是用于服务器，还是图形用户界面（GUI）或命令行的应用程序。如果你想在任务管理器中及 Windows XP 分组的用户友好任务栏里以你的进程名取代 java.exe 的出现，那么 exe4j 可以完成这个工作。exe4j 帮助你以一种安全的方式启动你的 java 应用程序，来显示本地启动画面，检测及发布合适的 JRE 和 JDK，以及进行启动时所发生的错误处理等，以至于更多。</li><li>关于exe4j的破解我就不多赘述了，懂的都懂</li><li>接下来是实际操作</li><li>下面是开始界面</li><li><img src="https://pic.imgdb.cn/item/6378540416f2c2beb192c11f.jpg" alt="开始界面"></li><li>然后接下来</li><li>选择jar到exe的模式</li><li><img src="https://pic.imgdb.cn/item/6378546916f2c2beb1932dfa.jpg"></li><li>然后接下来要选择你的输出路径</li><li><img src="https://pic.imgdb.cn/item/637854cd16f2c2beb193c56c.jpg"></li><li>接下来选择我们的启动方式，我选择的是控制台启动</li><li><img src="https://pic.imgdb.cn/item/6378550616f2c2beb1942a62.jpg"></li><li>接下来选择可以在32位和64位机器上都可以运行</li><li><img src="https://pic.imgdb.cn/item/6378553316f2c2beb194a3be.jpg"></li><li><img src="https://pic.imgdb.cn/item/6378556516f2c2beb1952fa9.jpg"></li><li>接下来选择我们exe要执行的主类</li><li>我这个项目是boot项目，所以选择的是这个</li><li><img src="https://pic.imgdb.cn/item/6378558416f2c2beb195719f.jpg"></li><li>然后设置我们的jdk版本</li><li><img src="https://pic.imgdb.cn/item/637855bd16f2c2beb195f1d6.jpg"></li><li><img src="https://pic.imgdb.cn/item/637855dc16f2c2beb1962843.jpg"></li><li>最后一直点击next就好了</li><li><img src="https://pic.imgdb.cn/item/6378564016f2c2beb196ce41.jpg"></li><li>这样我们就打包完成了</li><li>但是这样的打包只能再有jdk的环境中运行</li><li>接下来我们要为这个添加依赖</li></ul><h2 id="inno-setup"><a href="#inno-setup" class="headerlink" title="inno setup"></a>inno setup</h2><ul><li>简单来说就是个绑定依赖的程序</li><li>打开</li><li><img src="https://pic.imgdb.cn/item/6378572316f2c2beb198e2a2.jpg"></li><li><img src="https://pic.imgdb.cn/item/6378577616f2c2beb199aecb.jpg"></li><li><img src="https://pic.imgdb.cn/item/6378579d16f2c2beb19a1b5f.jpg"></li><li>然后配置我们的名称和版本号</li><li>然后选择我们，刚刚弄个出来的exe程序</li><li><img src="https://pic.imgdb.cn/item/637858cd16f2c2beb19b780b.jpg"></li><li>然后就一直傻瓜式next</li><li><img src="https://pic.imgdb.cn/item/6378593316f2c2beb19be141.jpg"></li><li>设置输出文件夹</li><li>图标</li><li>以及运行时的密码</li><li>然后一直next就好</li><li>然后会跳出两个对话框</li><li>全部选择是</li><li>最后会出现这个东西</li><li><img src="https://pic.imgdb.cn/item/637859e916f2c2beb19d21f9.jpg"></li><li>就代表导入依赖了</li><li>接下来我们要对他进行修改</li><li><img src="https://pic.imgdb.cn/item/63785a3d16f2c2beb19d8050.jpg"></li><li>这个是自己电脑本机的jdk路径</li><li>然后还有要在这里加上MYjrename</li><li><img src="https://pic.imgdb.cn/item/63785a8116f2c2beb19dd2fa.jpg"></li><li>最后运行就成功了</li><li>他会给你成一个setup文件，通过这个文件安装的exe</li><li>就会自己带环境了</li><li></li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%9D%82%E8%B4%A7%E6%8A%80%E6%9C%AF%E6%A0%88/">杂货技术栈</category>
      
      
      
      <comments>http://example.com/2022/11/19/jar%E5%88%B0exe/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>内网穿透</title>
      <link>http://example.com/2022/11/19/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
      <guid>http://example.com/2022/11/19/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
      <pubDate>Sat, 19 Nov 2022 03:18:15 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;内网穿透&quot;&gt;&lt;a href=&quot;#内网穿透&quot; class=&quot;headerlink&quot; title=&quot;内网穿透&quot;&gt;&lt;/a&gt;内网穿透&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>内网穿透简单来说就是让我们处于局域网的机器或者本地的项目，可以在外部的公网访问</li></ul><h3 id="常见的内网穿透工具"><a href="#常见的内网穿透工具" class="headerlink" title="常见的内网穿透工具"></a>常见的内网穿透工具</h3><ul><li>natapp网站</li><li>frp</li><li>ngrok</li><li>蜻蜓映射</li><li>ssh命令</li></ul><h3 id="natapp"><a href="#natapp" class="headerlink" title="natapp"></a>natapp</h3><ul><li>natapp网站 ： 注册账号之后会免费给你送一条隧道，不过临时用可以，不能长久用，</li><li>因为隧道名字会被强制更换</li><li>而vip隧道就不会强制更换</li></ul><h3 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h3><ul><li>frp是专业的反向代理工具</li><li><code>https:github.com/fatedier/frp</code></li><li>其中部署也非常简单 ： </li><li>frps在云服务器上</li><li>而要进行内网穿透的机器运行frpc</li><li>再改改配置就ok了</li></ul><h3 id="ngrok"><a href="#ngrok" class="headerlink" title="ngrok"></a>ngrok</h3><ul><li>属于专门做内网穿透的平台，以前是免费的不过最近好像收费了</li><li>注册之后我们就可以根据平台上的帮助文档进行配置，</li></ul><h3 id="蜻蜓映射"><a href="#蜻蜓映射" class="headerlink" title="蜻蜓映射"></a>蜻蜓映射</h3><ul><li>同上</li></ul><h3 id="ssh命令"><a href="#ssh命令" class="headerlink" title="ssh命令"></a>ssh命令</h3><ul><li>我们可以通过<code>ssh -R 80:localhost:80 xxxxx@localhost.run</code></li><li>进行反向映射端口</li><li>xxxx是远程云主机</li><li>前面的80是云主机的端口</li><li>后面的是本地的端口</li><li>这个命令是ssh自带的</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%9D%82%E8%B4%A7%E6%8A%80%E6%9C%AF%E6%A0%88/">杂货技术栈</category>
      
      
      
      <comments>http://example.com/2022/11/19/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>11-19作业</title>
      <link>http://example.com/2022/11/19/%E4%BD%9C%E4%B8%9A11-19/</link>
      <guid>http://example.com/2022/11/19/%E4%BD%9C%E4%B8%9A11-19/</guid>
      <pubDate>Sat, 19 Nov 2022 03:13:45 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;通过mapreduce的api统计emp表里的每个工作的人数&quot;&gt;&lt;a href=&quot;#通过mapreduce的api统计emp表里的每个工作的人数&quot; class=&quot;headerlink&quot; title=&quot;通过mapreduce的api统计emp表里的每个工作的人数&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="通过mapreduce的api统计emp表里的每个工作的人数"><a href="#通过mapreduce的api统计emp表里的每个工作的人数" class="headerlink" title="通过mapreduce的api统计emp表里的每个工作的人数"></a>通过mapreduce的api统计emp表里的每个工作的人数</h1><ul><li>数据源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">7369,SMITH,CLERK,7902,1980-12-17 14:00:00,800.00,,20</span><br><span class="line">7499,ALLEN,SALESMAN,7698,1981-02-20 14:00:00,1600.00,300.00,30</span><br><span class="line">7521,WARD,SALESMAN,7698,1981-02-22 14:00:00,1250.00,500.00,30</span><br><span class="line">7566,JONES,MANAGER,7839,1981-04-02 14:00:00,2975.00,,20</span><br><span class="line">7654,MARTIN,SALESMAN,7698,1981-09-28 13:00:00,1250.00,1400.00,30</span><br><span class="line">7698,BLAKE,MANAGER,7839,1981-05-01 13:00:00,2850.00,,30</span><br><span class="line">7782,CLARK,MANAGER,7839,1981-06-09 13:00:00,2450.00,,10</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7839,KING,PRESIDENT,,1981-11-17 14:00:00,5000.00,,10</span><br><span class="line">7844,TURNER,SALESMAN,7698,1981-09-08 13:00:00,1500.00,0.00,30</span><br><span class="line">7876,ADAMS,CLERK,7788,1983-01-12 14:00:00,1100.00,,20</span><br><span class="line">7900,lebulang,CLERK,7698,1981-12-03 14:00:00,950.00,,30</span><br><span class="line">7902,FORD,ANALYST,7566,1981-12-03 14:00:00,3000.00,,20</span><br><span class="line">7934,MILLER,CLERK,7782,1982-01-23 14:00:00,1300.00,,10</span><br><span class="line">7839,KING,PRESIDENT,,1981-11-17 14:00:00,5000.00,,10</span><br><span class="line">7654,MARTIN,SALESMAN,7698,1981-09-28 13:00:00,3200.00,1400.00,30</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line">7788,SCOTT,ANALYST,7566,1982-12-09 14:00:00,3000.00,,20</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>其中第二列就是工作</p></li><li><p>代码如下 ：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.apache.hadoop.conf.Configuration;</span><br><span class="line">import org.apache.hadoop.fs.Path;</span><br><span class="line">import org.apache.hadoop.io.IntWritable;</span><br><span class="line">import org.apache.hadoop.io.Text;</span><br><span class="line">import org.apache.hadoop.mapreduce.Job;</span><br><span class="line">import org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line">import org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line">import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line">import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author sxwang</span><br><span class="line"> * 11 18 14:00</span><br><span class="line"> */</span><br><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * driver</span><br><span class="line">     * @param args</span><br><span class="line">     */</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        String input=&quot;D://emp.txt&quot;;</span><br><span class="line">        String output=&quot;out&quot;;</span><br><span class="line">        Configuration conf = new Configuration();</span><br><span class="line">        //0.todo... 删除目标路径</span><br><span class="line">        FileUtils.deletePath(conf,output);</span><br><span class="line"></span><br><span class="line">        //1.设置 作业名称</span><br><span class="line">        Job job = Job.getInstance(conf, &quot;WCAPP&quot;);</span><br><span class="line">        //2.设置map reduce 执行代码的主类</span><br><span class="line">        job.setJarByClass(test.class);</span><br><span class="line">        job.setMapperClass(MyMapper.class);</span><br><span class="line">        job.setReducerClass(MyReducer.class);</span><br><span class="line">        //3.指定 oupput kv类型</span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line">        //4. 设置数据源路径 数据输出路径</span><br><span class="line">        FileInputFormat.addInputPath(job, new Path(input));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, new Path(output));</span><br><span class="line">        //5. 提交mr yarn</span><br><span class="line">        System.exit(job.waitForCompletion(true) ? 0 : 1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * mapper</span><br><span class="line">     */</span><br><span class="line">    public static class MyMapper</span><br><span class="line">            extends Mapper&lt;Object, Text, Text, IntWritable&gt; &#123;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        protected void map(Object key, Text value, Context context) throws IOException, InterruptedException &#123;</span><br><span class="line">            /**</span><br><span class="line">             * 1.按照分隔符 进行拆分 每个单词 ，每个单词赋值为1</span><br><span class="line">             * (word ,1)</span><br><span class="line">             */</span><br><span class="line"></span><br><span class="line">            String[] words = value.toString().split(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">            for (String word : words) &#123;</span><br><span class="line">                String[] split = word.split(&quot;,&quot;);</span><br><span class="line">                context.write(new Text(split[2]) ,new IntWritable(1));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * reducer</span><br><span class="line">     */</span><br><span class="line">    public static class MyReducer</span><br><span class="line">            extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         *  (word ,1)</span><br><span class="line">         *</span><br><span class="line">         *  (word,&lt;1,1,1,1&gt;)</span><br><span class="line">         *</span><br><span class="line">         *  1.聚合value</span><br><span class="line">         *</span><br><span class="line">         *  2.写出去</span><br><span class="line">         *  (word ,3)</span><br><span class="line">         */</span><br><span class="line">        @Override</span><br><span class="line">        protected void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context) throws IOException, InterruptedException &#123;</span><br><span class="line">            int sum=0;</span><br><span class="line">            for (IntWritable value : values) &#123;</span><br><span class="line">                sum +=Integer.parseInt(value.toString());</span><br><span class="line">            &#125;</span><br><span class="line">            context.write(key,new IntWritable(sum));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>基本概念 ： 把数据先通过map进行etl，然后通过redurce进行数据的整合之类的</li><li>最后输出</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E4%BD%9C%E4%B8%9A/">作业</category>
      
      
      
      <comments>http://example.com/2022/11/19/%E4%BD%9C%E4%B8%9A11-19/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>踩过的坑</title>
      <link>http://example.com/2022/11/17/%E5%9D%91/</link>
      <guid>http://example.com/2022/11/17/%E5%9D%91/</guid>
      <pubDate>Thu, 17 Nov 2022 11:47:34 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;修改windows下的hosts文件不生效&quot;&gt;&lt;a href=&quot;#修改windows下的hosts文件不生效&quot; class=&quot;headerlink&quot; title=&quot;修改windows下的hosts文件不生效&quot;&gt;&lt;/a&gt;修改windows下的hosts文件不生效&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="修改windows下的hosts文件不生效"><a href="#修改windows下的hosts文件不生效" class="headerlink" title="修改windows下的hosts文件不生效"></a>修改windows下的hosts文件不生效</h1><ul><li>这个坑一直卡了我三四天</li><li>配置完hadoop集群，进行web访问的时候出现了这个问题</li><li>因为windows的主机映射不好使，所以我无法在网页端查看数据</li></ul><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li>我这里解决这个的办法是通过</li><li>把中间空格放大的方法</li><li>就是一个小空格加一个tab键</li><li>然后进入<code>edge://net-internals</code>或者<code>chrome://net-internals</code></li><li>这取决于你的浏览器</li><li>然后<code>win + x</code> 查看windows powershell（管理员）打开之后执行<code> ipconfig /flushdns</code></li><li>刷新之后就可以通过映射访问了</li></ul><h1 id="有关于idea关于Hadoop的api的copyToLocalfile不生效"><a href="#有关于idea关于Hadoop的api的copyToLocalfile不生效" class="headerlink" title="有关于idea关于Hadoop的api的copyToLocalfile不生效"></a>有关于idea关于Hadoop的api的copyToLocalfile不生效</h1><ul><li>报错信息<code>java.io.FileNotFoundException: HADOOP_HOME and hadoop.home.dir are unset.</code></li><li>这个是代表你windows里没有配置hadoop环境</li><li>我们可以不用他提供的api</li><li>通过</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">FSDataInputStream fis = fs.open(new Path(&quot;/date&quot;)); // hdfs上的文件</span><br><span class="line">OutputStream outputStream = new FileOutputStream( new File(&quot;D:\\ bg1.txt&quot;) , false); // 本地的存储地点</span><br><span class="line">IOUtils.copyBytes(fis,outputStream,4096 , true);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>就可以实现下载</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%97%A5%E5%BF%97/">日志</category>
      
      
      
      <comments>http://example.com/2022/11/17/%E5%9D%91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hadoop面试会问</title>
      <link>http://example.com/2022/11/17/11-17/</link>
      <guid>http://example.com/2022/11/17/11-17/</guid>
      <pubDate>Thu, 17 Nov 2022 11:47:10 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;hdfs的写流程&quot;&gt;&lt;a href=&quot;#hdfs的写流程&quot; class=&quot;headerlink&quot; title=&quot;hdfs的写流程&quot;&gt;&lt;/a&gt;hdfs的写流程&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;面试|必备&lt;/li&gt;
&lt;li&gt;通过客户端，写文件&lt;/li&gt;
&lt;li&gt;首先客户端会</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="hdfs的写流程"><a href="#hdfs的写流程" class="headerlink" title="hdfs的写流程"></a>hdfs的写流程</h1><ul><li>面试|必备</li><li>通过客户端，写文件</li><li>首先客户端会调用 FileSystem 的creat</li><li>去和namenode进行通信 ， 是通过rpc通信</li><li>然后namenode会去检查这个路径的文件是不是存在并且检查你的权限</li><li>假如都ok ， 则执行你的操作</li><li>但是这个时候还没有写数据</li><li>是不关联任何block的</li><li>而namenode根据上传文件的大小，和块的大小，以及副本数</li><li>计算要上传多少块以及后续要在datanode上的什么位置</li><li>最后把信息返回到客户端</li><li>就是 ： fsdataoutputstream</li><li>Client 调用 fdsdataoutputstream</li><li>将第一个块的第一个副本数写第一个dn节点</li><li>写完去写第二个</li><li>然后是第三个</li><li>当三个都写完了 ， 会返回一个ack package</li><li>把确认包给dn2</li><li>当dn2确认并加上自己的</li><li>然后给dn3，同上</li><li>最后将ack package 返回给 fdsdataoutputstream</li><li>上面只是对于第一个块</li><li>当所有的块全部写完的时候，我们会调用</li><li>这个流对象的close方法</li><li>告诉namenode ，文件写入成功</li></ul><h1 id="hdfs读操作"><a href="#hdfs读操作" class="headerlink" title="hdfs读操作"></a>hdfs读操作</h1><ul><li>面试|必备</li><li>Cilent调用FS.open(filepath)</li><li>nn和pc进行通信，返回该文件的部分或者全部的block列表</li><li>以fdsdatainputstream的形式</li><li>Client的FSDDataInputstream的read方法</li><li>会去和最近的dn进行匹配，读取完成</li><li>会check，假如ok，就关闭通信</li><li>假如读取失败</li><li>会记录dn+block信息</li><li>下次就也不会从这个节点读取，转而从其他的节点读取</li><li>然后会去和第二块的最近的dn进行读取，以此类推</li><li>当整个block全部读取完之后，文件还没读取完，就会继续调用fs的方法进行下一次block的读取</li><li>以此类推</li><li>最后用close方法关闭</li></ul><h1 id="hdfs的副本放置策略"><a href="#hdfs的副本放置策略" class="headerlink" title="hdfs的副本放置策略"></a>hdfs的副本放置策略</h1><ul><li>机架</li><li>生产上读写操作，选择dn节点进行读取</li><li>第一副本 ： </li><li>放置在client上传的dn节点</li><li>client 不在dn节点 ，就随机选择一个dn</li><li>第二副本 ： </li><li>放置在第一个副本不同的机架上的一个dn节点</li><li>第三副本 ： </li><li>和第二副本相同机架但是不同节点</li><li>补充 ；</li><li>副本数是三</li><li>上述都是以副本数为3的情况</li><li>如果是4就多几个随机</li></ul><h1 id="hdfs的安全模式"><a href="#hdfs的安全模式" class="headerlink" title="hdfs的安全模式"></a>hdfs的安全模式</h1><ul><li>什么时候会发生安全模式</li><li>刚启动hadoop的时候</li><li>hsdf发生故障的时候 ： 集群文件大量会丢失</li><li>人为进入</li><li>命令 ： <code>hdfs dfsadmin -safemode &lt;enter | leave | get | wait | forceExit&gt;</code></li></ul><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><ul><li>kill 命令 不只有一个-9</li><li>还有很多 ： 目前我所看见的至少有64个</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">1) SIGHUP     2) SIGINT     3) SIGQUIT     4) SIGILL     5) SIGTRAP</span><br><span class="line">6) SIGABRT     7) SIGBUS     8) SIGFPE     9) SIGKILL    10) SIGUSR1</span><br><span class="line">11) SIGSEGV    12) SIGUSR2    13) SIGPIPE    14) SIGALRM    15) SIGTERM</span><br><span class="line">16) SIGSTKFLT    17) SIGCHLD    18) SIGCONT    19) SIGSTOP    20) SIGTSTP</span><br><span class="line">21) SIGTTIN    22) SIGTTOU    23) SIGURG    24) SIGXCPU    25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM    27) SIGPROF    28) SIGWINCH    29) SIGIO    30) SIGPWR</span><br><span class="line">31) SIGSYS    34) SIGRTMIN    35) SIGRTMIN+1    36) SIGRTMIN+2    37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4    39) SIGRTMIN+5    40) SIGRTMIN+6    41) SIGRTMIN+7    42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9    44) SIGRTMIN+10    45) SIGRTMIN+11    46) SIGRTMIN+12    47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14    49) SIGRTMIN+15    50) SIGRTMAX-14    51) SIGRTMAX-13    52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11    54) SIGRTMAX-10    55) SIGRTMAX-9    56) SIGRTMAX-8    57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6    59) SIGRTMAX-5    60) SIGRTMAX-4    61) SIGRTMAX-3    62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1    64) SIGRTMAX</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>这个简单介绍几个 ： </li><li>1 ： 重新加载合格进程</li><li>9 ： 杀死一个进程</li><li>15 ： 正常停止一个进程</li></ul><h1 id="公司内部的逻辑"><a href="#公司内部的逻辑" class="headerlink" title="公司内部的逻辑"></a>公司内部的逻辑</h1><ul><li>一般一个组件都会有一个用户进行管理</li><li>比如 ： mysql ： 可以创建一个mysql用户</li><li>等</li><li>创建数据库的流程 ： </li><li><code>create dataase dl2262;</code></li><li><code>grant all priviledges on dl2262 identified by &quot;1234546;&quot;</code></li><li><code>flush priviledges;</code></li></ul><h1 id="hdfs生产最佳实践"><a href="#hdfs生产最佳实践" class="headerlink" title="hdfs生产最佳实践"></a>hdfs生产最佳实践</h1><ul><li>如何查看hdfs的文件块是不是丢失<br>-<code>hdfs fsck&lt;path&gt;</code></li></ul><h2 id="hdfs-的block块丢失了如何解决"><a href="#hdfs-的block块丢失了如何解决" class="headerlink" title="hdfs 的block块丢失了如何解决"></a>hdfs 的block块丢失了如何解决</h2><ul><li>第一种 ： 不用解决 ，也因为hdfs会自动回复，一般是6h ， 就是dn上传的时候</li><li>第二种 ： 手动进行回复</li><li><code>hdfs debug recoverLease -path &lt;filename&gt; retries num</code> </li><li>后面的是重试次数</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%97%A5%E5%BF%97/">日志</category>
      
      
      
      <comments>http://example.com/2022/11/17/11-17/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hadoop</title>
      <link>http://example.com/2022/11/11/11-10/</link>
      <guid>http://example.com/2022/11/11/11-10/</guid>
      <pubDate>Fri, 11 Nov 2022 02:07:37 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;hadoop简介&quot;&gt;&lt;a href=&quot;#hadoop简介&quot; class=&quot;headerlink&quot; title=&quot;hadoop简介&quot;&gt;&lt;/a&gt;hadoop简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;以阿帕奇软件 ，hadoop为主的生态圈 &lt;/li&gt;
&lt;li&gt;狭义就是Hadoo</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="hadoop简介"><a href="#hadoop简介" class="headerlink" title="hadoop简介"></a>hadoop简介</h1><ul><li>以阿帕奇软件 ，hadoop为主的生态圈 </li><li>狭义就是Hadoop</li></ul><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li>hdfs ： 存储海量的数据</li><li>mapreduce ： 计算分析</li><li>yarn ： 资源和作业的调度</li></ul><h3 id="观点"><a href="#观点" class="headerlink" title="观点"></a>观点</h3><ul><li>存储是第一位的</li><li>计算是第二位的</li></ul><h2 id="学习介绍"><a href="#学习介绍" class="headerlink" title="学习介绍"></a>学习介绍</h2><ul><li>官网进行学习</li><li><code>hadoop.apache.org</code></li><li>但是后面的其余框架对应的官网就是 把hadoop 改掉</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">The Apache Hadoop software library is a framework that allows for the distributed processing of large data sets across clusters of computers using simple programming models. It is designed to scale up from single servers to thousands of machines, each offering local computation and storage. Rather than rely on hardware to deliver high-availability, the library itself is designed to detect and handle failures at the application layer, so delivering a highly-available service on top of a cluster of computers, each of which may be prone to failures.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="hadoop模块的简介"><a href="#hadoop模块的简介" class="headerlink" title="hadoop模块的简介"></a>hadoop模块的简介</h3><ul><li>hdfs ：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">A distributed file system that provides high-throughput access to application data.</span><br></pre></td></tr></table></figure><ul><li>mapredurce :</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">A YARN-based system for parallel processing of large data sets</span><br></pre></td></tr></table></figure><ul><li>yarm :</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">A framework for job scheduling and cluster resource management</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="版本以及主流"><a href="#版本以及主流" class="headerlink" title="版本以及主流"></a>版本以及主流</h3><ul><li>版本 ： 1.x ， 2.x ， 3.x</li><li>主流 ： 2.x -》 3.x</li><li>公司所用 ： </li><li>apache 原生</li><li>cdh ： 5.x ， 6.x 从6.3之后开始收费</li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ul><li>安装的是什么？</li><li>Hadoop有什么？</li><li>我们只用部署 yarn hdfs 因为mapredurce是java代码人员给我们的 ：都是主从架构的</li><li>hdfs ： </li><li>namenode : 老大 负责指挥数据的存储</li><li>datanode ： 主要负责数据的存储</li><li>seconderynamenode ： 负责辅助namenode的</li><li>yarn :</li><li>resourcemanager : 老大 负责资源分配</li><li>nodemanager ： 小弟负责资源分配给xxx</li></ul><h3 id="部署模式"><a href="#部署模式" class="headerlink" title="部署模式"></a>部署模式</h3><ul><li>单点模式 ：所有都在一台机器上</li><li>完全分布式模式 ：分布在多台机器上</li></ul><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li>部署平台 ： windows 和linux</li><li>一般linux用的多 ，而且在linux上最少2000台</li><li>jdk ： 安装java的要求</li><li>3.3-目前 ： java8 - 11</li><li>3.0-3.2 ： java8</li><li>2.7-2.10 ： java8</li><li>但是有些的java8 的版本也不行 ，详细参考官网</li><li>要下载补丁安装就好</li><li>ssh ： 默认centos是安装的，但是ubantu是没安装的</li><li>个人要求 ：创建hadoop用户 ，以后我们都用那个用户开发</li><li>而且创建 几个文件夹进行规范</li><li>app ：app</li><li>data ：数据 </li><li>log ：监控日志</li><li>project ：项目 </li><li>shell ： shell脚本</li><li>software ： 安装包</li><li>以前版本的apche 版本框架 在</li><li><code>archive.apache.org/dist</code></li><li>部署jdk</li><li>hadoop ： 无要求</li></ul><h3 id="配置开始"><a href="#配置开始" class="headerlink" title="配置开始"></a>配置开始</h3><ul><li>把文件解压</li><li>配置环境变量</li><li>个人 ： 修改 .&#x2F;bashrc </li><li>添加 exprot JAVA_HOME&#x3D; xxxx</li><li>export PATH&#x3D;${JAVA_HOME}&#x2F;bin:$PATH</li><li>export HADOOP_HOME&#x3D;mmm</li><li>export PATH&#x3D;${HADOOP_HOME}&#x2F;bin:${HADOOP_HOME}&#x2F;sbin:$PATH</li><li>上面xxxx和mmm</li><li>分别代表我们的java的和hadoop的解压目录</li><li>然后我们导入个人环境变量 ， </li><li>source ~&#x2F;.bashrc</li><li>然后验证安装 java -version 和 hadoop version</li><li>如果成功就代表安装成功了</li><li>接下来我们更改hadoop的配置文件</li><li>进入到hadoop的etc文件夹里</li><li>编辑 core-site.xml</li><li>在两个标签之间输入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://你的机器名:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>编辑hdfs-site.xml</li><li>在两个标签之间输入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><ul><li>接下来我们进行开放访问 ， 我们先执行</li><li><code>ssh user@hostname [com]</code> 进行登录</li><li>然后通过输入密码登陆一次</li><li>上一条的的命令如果加上com则代表登录并执行这个命令</li><li>然后我们要设置免密登录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -P &#x27;&#x27; -f ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">chmod 0600 ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后继续上述的命令：看看能不能免密登录</li><li>成功之后，我们要更改文件格式 ： 相当于初始化操作</li><li>然后我们启动dhfs</li><li><code>start-dfs.sh</code></li><li>然后我们访问 <code>http://你的虚拟机ip:9870/</code></li><li>成功看见hadoop的web页面就好了</li><li>然后可以更简便的方法</li><li>在c盘找到 windows 然后进去system32</li><li>然后进去driver</li><li>然后进入etc文件</li><li>然后在hosts文件最后的加上我们在linux里的主机和ip映射</li><li>就可以通过 <code>http://你的虚拟机名称:9870/</code>访问我们的hadoop了</li></ul><h3 id="部署yarn"><a href="#部署yarn" class="headerlink" title="部署yarn"></a>部署yarn</h3><ul><li>对于部署单点的yarn</li><li>我们可以通过配置yarn的配置文件</li><li><code>mapred-site.xml</code> 和<code>yarn-site.xml</code></li></ul><h4 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h4><ul><li>对于这个文件我们这样更改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.application.classpath&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*:$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h4><ul><li>对于这个文件我们进行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">#设置web访问的端口</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;你的主机名称:9999&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">#设置运行在那个虚拟机上</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;你的主机名&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#下面两个要基本配置</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ,HADOOP_MAPRED_HOME&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>配置完成之后我们要进行<code>start-yarn.sh</code></li><li>然后开启这个服务 ： 我们可以通过访问浏览器的 <code>xxx你的ip:9999</code> ,访问这个服务</li><li>这样我们的单点就算配置完成了</li></ul><h2 id="关于分布式的配置"><a href="#关于分布式的配置" class="headerlink" title="关于分布式的配置"></a>关于分布式的配置</h2><ul><li>分布式的配置就是把单点的配置分到多台机器上</li><li>比如 ： 把hdfs的namenode 和 datanode 和secondnamenode分到三台机器上</li><li>把yarn的部署也分到三台机器上</li></ul><h3 id="开始分布式"><a href="#开始分布式" class="headerlink" title="开始分布式"></a>开始分布式</h3><ul><li>首先我们要明确一点 ： namenode是老大 ，只能有一个</li><li>datanode是小弟 ：  可以有多个</li><li>secondnamenode ：是秘书只能有一个</li><li>对于yarn ： resourcemanager只能有一个</li><li>而 ：nodemanagers ：可有多个</li></ul><h4 id="开始之前的配置"><a href="#开始之前的配置" class="headerlink" title="开始之前的配置"></a>开始之前的配置</h4><ul><li>关于hdfs和上面部署的一样</li><li>只不过在配置免密登录的时候不同</li><li>因为我们现在要做三台机器互相免密</li><li>所以我们要用</li><li><code>ssh-keygen -t rsa</code> 然后三次回车生成公钥和私钥</li><li>然后三台机器都要用一遍</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ssh-copy-id 第一台机器名</span><br><span class="line">ssh-copy-id 第二台机器名</span><br><span class="line">ssh-copy-id 第三台机器名</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后分别对三台机器用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ssh hadoop@第一台机器名</span><br><span class="line">ssh hadoop@第二台机器名</span><br><span class="line">ssh hadoop@第三台机器名</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>最后分别ssh一下然后如果能成功就代表成功了</li></ul><h4 id="hdfs"><a href="#hdfs" class="headerlink" title="hdfs"></a>hdfs</h4><ul><li><code>core-site.xml</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">#设置存储位置</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/home/hadoop/data/hadoopdate&lt;/value&gt;</span><br><span class="line"> &lt;/property&gt;</span><br><span class="line">#设置namenode在哪一台机器上运行</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://主机器的名称:9000&lt;/value&gt;</span><br><span class="line"> &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-<code>workers</code> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">第一台机器的名称</span><br><span class="line">第二台机器的名称</span><br><span class="line">第三台机器的名称</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>hdfs-site.xml</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line"> #下面的values代表是几台机器，我这个是三台机器</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  #设置secondarynamenode的端口和在哪一台机器上</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;bigdata4:9868&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">#同上一个</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.https-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;bigdata4:9869&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后三台机器都要配置相同的环境变量</li></ul><h4 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h4><ul><li><code>mapred-site.xml</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.application.classpath&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*:$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>yarn-site.xml</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">#设置resourcemanager其所占用的端口</span><br><span class="line"> &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;bigdata5:9999&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">#设置resourcemanager其所在的机器</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;bigdata5&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">#下面两个是正常yarn的配置文件</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ,HADOOP_MAPRED_HOME&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><ul><li>同样三台机器也要配置相同的文件</li><li>然后我们要在我们的namenode机器上</li><li>开始初始化： <code>hdfs namenode -format</code></li><li>然后我们在namenode上开始运行<code>start-dfs.sh</code></li><li>然后我们在resourcemanager上开始运行<code>start-yarn.sh</code></li><li>然后我们可以用jps查看每个机器的进程</li><li>查看是不是符合我们的想法</li></ul><h3 id="关于datanode缺失"><a href="#关于datanode缺失" class="headerlink" title="关于datanode缺失"></a>关于datanode缺失</h3><ul><li>因为默认hadoop有一个id文件是在<code>/tmp/hadoop-hadoop/dfs</code>下的</li><li>我们默认启动的时候可能有多个原因 ，造成生成的id不一致</li><li>比如 ； 我们忘记关闭hadoop服务之类的，或者卸载的时候忘记删掉他了</li><li>这些都会造成id不一致的问题</li><li>解决方法： </li><li>如果dfs文件夹中没有重要的数据，那么删除dfs文件夹，再重新运行下列指令（格式化指令）</li><li>如果dfs文件中有重要的数据，那么在dfs&#x2F;name目录下找到一个current&#x2F;VERSION文件，记录clusterID并复制。然后dfs&#x2F;data目录下找到一个current&#x2F;VERSION文件，将其中clustreID的值替换成刚刚复制的clusterID的值即可</li></ul><h2 id="hdfs的命令"><a href="#hdfs的命令" class="headerlink" title="hdfs的命令"></a>hdfs的命令</h2><ul><li>创建文件夹 <code>hdfs dfs -mkdir xxx</code> : 创建xxx文件夹，可以多层创建文件夹</li><li>创建文件<code>hdfs dfs -touchz path</code></li><li>复制文件<code>hdfs dfs -cp 源目录 目标路径</code> ：这个是把整个文件夹结构都cp过去：属于hdfs的内部操作不是上传下载</li><li>移动文件<code>hdfs dfs -mv 源目录 目标目录</code></li><li>赋予权限<code>hdfs dfs -chmod 权限参数 </code></li><li>上传文件<code>hdfs dfs -put 源文件夹路径 目标文件夹路径</code></li><li>上传文件<code>hdfs dfs -copyFromLocal 源文件夹 目标文件夹</code></li><li>上传文件且删除本地文件<code>hdfs dfs -moveFromLocal 源文件 目标文件</code></li><li>下载文件<code>hdfs dfs -get 源文件夹路径 目标文件夹路径</code></li><li>查看文件内容 <code>hdfs dfs -cat path</code>从头看这个文件</li><li>查看文件内容 <code>hdfs dfs -tail path</code>查看这个文件的最后1k</li><li>删除文件<code>hdfs dfs -rm 文件路径</code></li><li>删除文件夹<code>hdfs dfs -rm -R 文件夹</code></li></ul><h2 id="javaapi的方式操作hdfs"><a href="#javaapi的方式操作hdfs" class="headerlink" title="javaapi的方式操作hdfs"></a>javaapi的方式操作hdfs</h2><ul><li><p>单元测试 ： 代表我们可以 ， 单独运行某个方法</p></li><li><p>进行部份调试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import org.apache.hadoop.conf.Configuration;</span><br><span class="line">import org.apache.hadoop.fs.FileSystem;</span><br><span class="line">import org.apache.hadoop.fs.Path;</span><br><span class="line">import org.junit.Assert;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.URI;</span><br><span class="line">import java.net.URISyntaxException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class hdfsapi &#123;</span><br><span class="line">    @Test</span><br><span class="line">    public  void  mkdir() throws IOException, URISyntaxException, InterruptedException &#123;</span><br><span class="line">        // 获取程序入口</span><br><span class="line">        Configuration conf = new org.apache.hadoop.conf.Configuration(); //  配置参数</span><br><span class="line">        URI uri = new URI(&quot;hdfs://192.168.41.132:9000&quot;); //创建uri作为要连接的地址和端口</span><br><span class="line">        FileSystem fs = FileSystem.get( uri , conf , &quot;hadoop&quot;); // 开始链接 ，三个参数分别是其所在地地方，配置参数 ，用户名</span><br><span class="line">        Path path = new Path(&quot;/ggd&quot;); // 路径</span><br><span class="line">        boolean mkdir = fs.mkdirs(path); // 判断是不是执行成功</span><br><span class="line">        Assert.assertEquals(true , mkdir);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>实现创建文件夹并移动且改名</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import org.apache.hadoop.conf.Configuration;</span><br><span class="line">import org.apache.hadoop.fs.FileSystem;</span><br><span class="line">import org.apache.hadoop.fs.Path;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class hdfsapi &#123;</span><br><span class="line"></span><br><span class="line">    static FileSystem  fs;</span><br><span class="line"></span><br><span class="line">    static &#123;</span><br><span class="line">        Configuration conf = new Configuration();</span><br><span class="line">        conf.set(&quot;fs.defaultFS&quot; , &quot;hdfs://192.168.41.132:9000&quot;);</span><br><span class="line">        System.setProperty(&quot;HADOOP_USER_NAME&quot; ,&quot;hadoop&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            fs = FileSystem.get(conf);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 移动之前的文件存储路径</span><br><span class="line">        String url = args[1];</span><br><span class="line">        // 移动之后的文件存储路径</span><br><span class="line">        String det = args[2];</span><br><span class="line"></span><br><span class="line">        String hozhui = args[0];</span><br><span class="line"></span><br><span class="line">        // 要上传的文件目录</span><br><span class="line">        String pathlocalfile = args[3];</span><br><span class="line"></span><br><span class="line">        Integer date = Integer.parseInt(args[4]);</span><br><span class="line"></span><br><span class="line">        Integer up = Integer.parseInt(args[5]);</span><br><span class="line"></span><br><span class="line">        Integer down = Integer.parseInt(args[6]);</span><br><span class="line"></span><br><span class="line">        String[] string = new String[args.length - 7];</span><br><span class="line"></span><br><span class="line">        System.arraycopy(args , 7 , string , 0 , args.length - 7);</span><br><span class="line"></span><br><span class="line">        makeream(hozhui,url,det,pathlocalfile,date , up ,down , string);</span><br><span class="line"></span><br><span class="line">      //rm(20221115 , 1 , 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void rm(int m , int up ,int down ) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 通过递归调用本身函数，进行递归调用，删除不同日期的文件夹以及</span><br><span class="line">        while (up &gt; 0)&#123;</span><br><span class="line">            rm(m+1 , --up , 0);</span><br><span class="line">        &#125;</span><br><span class="line">        // 同上</span><br><span class="line">        while (down &gt; 0)&#123;</span><br><span class="line">            rm(m-1 , 0 ,--down);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 把数字改变成字符串</span><br><span class="line">        String uri = String.valueOf(m);</span><br><span class="line"></span><br><span class="line">        // 基础路径</span><br><span class="line">        Path path = new Path(&quot;/data/dt=&quot; + uri);</span><br><span class="line">        Path path1 = new Path(&quot;/data/hive&quot; + &quot;/&quot; + uri + &quot;-01.data&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            fs.delete(path);</span><br><span class="line">            fs.delete(path1);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static void makeream(String hozhui, String url , String det ,String pathlocalfile , int nowday , int up , int down , String ...args) &#123;</span><br><span class="line">        // 基礎路徑</span><br><span class="line">        String dataurl = null;</span><br><span class="line">        if (args.length &gt; 0)&#123;</span><br><span class="line">            String[] arg1 = new String[args.length-1];</span><br><span class="line">            System.arraycopy(args , 1 , arg1 ,0 ,args.length-1);</span><br><span class="line">            dataurl = args[0];</span><br><span class="line">            makeream(hozhui,url,det,pathlocalfile,nowday,up,down,arg1);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            dataurl = String.valueOf(nowday);</span><br><span class="line">            // 通过递归的方式 ， 进行创建文件夹等操作</span><br><span class="line">            while (up &gt; 0)&#123;</span><br><span class="line">                makeream(hozhui,url,det,pathlocalfile,nowday+1 , --up , 0);</span><br><span class="line">            &#125;</span><br><span class="line">            while (down &gt; 0)&#123;</span><br><span class="line">                makeream(hozhui,url,det,pathlocalfile,nowday-1 , 0 ,--down);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 获取文件名字</span><br><span class="line">        String[] split = pathlocalfile.split(&quot;/&quot;);</span><br><span class="line">        String filname = split[split.length-1];</span><br><span class="line">        // 上传的文件路径</span><br><span class="line">        Path pathfile = new Path(pathlocalfile);</span><br><span class="line">        // 最后的文件的名字</span><br><span class="line">        String settotal = det+ &quot;/&quot; + dataurl + hozhui;</span><br><span class="line">        // 刚开始创建的文件目录</span><br><span class="line">        String urltotal = url + dataurl;</span><br><span class="line">        // 创建文件夹的Path</span><br><span class="line">        Path path = new Path(urltotal);</span><br><span class="line">        // 移动前的文件路径</span><br><span class="line">        Path pathfilehdfs = new Path( path + &quot;/&quot; + filname);</span><br><span class="line">        // 新的名字文件路径</span><br><span class="line">        Path newname = new Path(settotal);</span><br><span class="line"></span><br><span class="line">//        // 要移动到的路径</span><br><span class="line">//        Path detPath = new Path(url1);</span><br><span class="line"></span><br><span class="line">        // 后来的文件目录</span><br><span class="line">        // Path detpathfile = new Path(det + &quot;/&quot; + filname);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if(!fs.exists(new Path(det)))&#123;</span><br><span class="line">                fs.mkdirs(new Path(det));</span><br><span class="line">            &#125;</span><br><span class="line">            fs.mkdirs(path);</span><br><span class="line">            fs.copyFromLocalFile(pathfile , path);</span><br><span class="line">            // fs.rename(pathfilehdfs , detPath);</span><br><span class="line">            fs.rename(pathfilehdfs , newname);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>单词统计</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import org.apache.hadoop.conf.Configuration;</span><br><span class="line">import org.apache.hadoop.fs.FSDataInputStream;</span><br><span class="line">import org.apache.hadoop.fs.FileSystem;</span><br><span class="line">import org.apache.hadoop.fs.Path;</span><br><span class="line">import org.apache.hadoop.io.IOUtils;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">public class wordcount &#123;</span><br><span class="line">    static FileSystem fs;</span><br><span class="line"></span><br><span class="line">    static &#123;</span><br><span class="line">        Configuration conf = new Configuration();</span><br><span class="line">        conf.set(&quot;fs.defaultFS&quot; , &quot;hdfs://192.168.41.132:9000&quot;);</span><br><span class="line">        System.setProperty(&quot;HADOOP_USER_NAME&quot; ,&quot;hadoop&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            fs = FileSystem.get(conf);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        wordcounts(&quot;/2.log&quot; , &quot;,&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void wordcounts( String path ,  String regx ) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String basic = null;</span><br><span class="line"></span><br><span class="line">        try( FSDataInputStream fis = fs.open(new Path(path));</span><br><span class="line">             OutputStream outputStream = new FileOutputStream( new File(&quot;D:\\ bg1.txt&quot;) , false);</span><br><span class="line">             InputStream inputStream = new FileInputStream(new File(&quot;D:\\ bg1.txt&quot;));</span><br><span class="line">             )</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            IOUtils.copyBytes(fis,outputStream,4096 , true);</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int len = 0;</span><br><span class="line">            while((len = inputStream.read(buffer)) != -1)&#123;</span><br><span class="line">                basic = new String(buffer, 0, len);</span><br><span class="line">                System.out.println(basic);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            String[] split = basic.split(regx);</span><br><span class="line"></span><br><span class="line">            Map&lt;String , Integer&gt; result = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            for (int i=0;i&lt;split.length;i++)&#123;</span><br><span class="line">                result.put(split[i] , result.getOrDefault(split[i] , 0 )+1);</span><br><span class="line">            &#125;</span><br><span class="line">                result.forEach((k,v)-&gt;System.out.println(k+&quot;,&quot;+v));</span><br><span class="line"></span><br><span class="line">            int[] flag = new int[split.length];</span><br><span class="line">            for (int i =0; i&lt; split.length; i++)&#123;</span><br><span class="line">                for (int j = 0; j&lt; split.length;j++)&#123;</span><br><span class="line">                    if (split[i].equals(split[j]))&#123;</span><br><span class="line">                        flag[i]++;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;--------------------------------------------------------&quot;);</span><br><span class="line">            for (int i =0; i&lt;split.length-1;i++)&#123;</span><br><span class="line"></span><br><span class="line">                if (!(split[i].equals(split[i+1])))&#123;</span><br><span class="line">                    System.out.println(split[i] + &quot;\t&quot; + flag[i]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">//            System.out.print(&quot;\n&quot;);</span><br><span class="line"></span><br><span class="line">//            for (int i =0; i&lt; flag.length;i++)&#123;</span><br><span class="line">//                System.out.print(flag[i]);</span><br><span class="line">//                System.out.print(&quot;\t&quot;);</span><br><span class="line">//            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;--------------------------------------&quot;);</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关于文件的存储"><a href="#关于文件的存储" class="headerlink" title="关于文件的存储"></a>关于文件的存储</h3><ul><li>架构设计 ： 面试必问</li><li>namenode —–nn</li><li>负责对外的访问接口</li><li>负责块的映射</li><li>元数据 ； 描述数据的数据</li><li>文件名称</li><li>文件的目录</li><li>文件的属性，权限，创建时间，副本数据</li><li>blockmap ： 块映射</li><li>一个 文件被分割成多个数据块，</li><li>块映射不会永久化这个存储</li><li>是通过集群运行的时候dn定期发送blockreport给nn进行维护</li><li>控制其数据块在哪一个节点上的</li><li>nn作用 ： 管理文件的命名空间 ，其实就算维护文件系统树的文件以及文件夹</li><li>是以两种的方式永久的存储在磁盘</li><li>镜像文件 ： fsimage</li><li>编辑日志文件 editlogs</li><li>seconderynamenode ——snn</li><li>去老大的节点上拿镜像文件和日志文件，进行合并和备份，然后换给nn</li><li>datanode —–dn</li><li>每个节点都会有这个进程</li><li>负责关于客户端的文件的读写</li><li>负责存储数据</li><li>存储数据块，以及对于数据块的校验</li><li>每隔3秒发送一次心跳给namenode ，告诉你我还在</li><li>每个一定时间（6h）发送一次块报告,这个报告，是扫描磁盘和内存之中的数据一不一样</li><li>目的 ： 生产上 ： 可能会发生文件块丢失或者损坏</li><li></li></ul><h2 id="mapreduce"><a href="#mapreduce" class="headerlink" title="mapreduce"></a>mapreduce</h2><ul><li>简介 ： 其设计理念是计算向数据靠拢，采用分而治之的策略，将庞大的数据分为很多个很多个小切片，并且为每个小切片单独的启动一个map任务</li><li>适合mapredurce处理的数据集要满足一个前提：待处理的数据集可以分解成许多更小的数据集，且每一个更小的数据集都可以并行的处理</li><li>其采用的是主从架构（master&#x2F;Slave），就是一个主服务器多个从服务器（salve），master上运行jobTracker，slaver运行TaskTracker</li></ul><h3 id="mapreduce体系架构"><a href="#mapreduce体系架构" class="headerlink" title="mapreduce体系架构"></a>mapreduce体系架构</h3><ul><li>其主要是由四个部分组成 ： 分别是Client , JobTracker,TaskTracker以及Task</li><li>Client ： 用户编写的Mapredurce程序通过Client提交到jobTracker</li><li>jobTracker(运行在主服务器上) : 负责监控和资源调度</li><li>监控所有的TaskTracker与job的健康情况，一旦发现失败，就把相应的任务转移到其他的节点</li><li>其会跟踪任务的执行调度，资源使用量，并将这些信息告诉任务调度器（TaskScheduler），而调度器会在资源调度器出现空闲时，选择合适的任务去使用这些资源</li><li>jobTracker（运行在服务器） </li><li>TaskTracker会周期性的通过心跳将本节点上资源的使用情况和任务运行进度汇报给jobTracker，同时接受jobTracker发送过来的命令并执行相应的操作（如 ： 启动新任务 ，杀死任务等）</li><li>TaskTracker使用“slot”等量划分本节点上的资源量（CPU ，内存）。一个Task获取到一个slot后才有机会运行，而hadoop调度器的作用就是将各个TaskTracker上的空闲slot分配给Task使用。slot分为Map slot和Reduce slot两种，分别提供Map Task和Redurce Task使用</li><li>Task</li><li>Map Task和Redurce Task 均由TaskTracker</li></ul><h3 id="mapreduce的工作流程"><a href="#mapreduce的工作流程" class="headerlink" title="mapreduce的工作流程"></a>mapreduce的工作流程</h3><ul><li>一个大的mapredurce任务，首先会被分为为若干个Map任务在多台机器上执行运行（map任务通常运行在存储节点上），每一个map任务会输出一个&lt;key , value&gt;形式的中间结果，一个map任务只有全部执行完成之后才会进行reduce任务，map的输出结果&lt;key, value&gt;（存储在本地磁盘） ， 具有相同的key会被发送到同一个reduce任务</li><li>注意 ：不同的map之间不会有通信</li><li>不同的reduce之间也不会</li><li>用户不能显式的从一台机器向另外一台机器发送消息，所有的信息交换都是通过Mapredurce框架自身去实现</li><li>map的输入文件，redurce任务的输出结果都是保存在hdfs分布式文件系统中，map的输出结果保存在本地磁盘文件中</li><li>当一个map任务处理全部结束之后，reduce任务才能开始去取相应的数据</li><li>只有map任务需要考虑数据局限性，实现计算向数据靠拢，reduce无需考虑数据局限性</li></ul><h4 id="各阶段执行内容"><a href="#各阶段执行内容" class="headerlink" title="各阶段执行内容"></a>各阶段执行内容</h4><ul><li>分为 ：5个阶段 预处理，map，shuffle，reduce，输出</li><li>预处理 ： 由inputFormat 进行格式验证以及逻辑上的分区inputSplit ， inputSplit经过redodrdreader</li><li>根据inputSplit的信息来处理inputSplit中的具体记录，转换为键值对 ，输入给map</li><li>map ： 接受来自RR键值对，进行分区，排序，合并，归并，得到&lt;key , value-list&gt;形式的中间结果，输入给reduce，此处包括map端的shuffle和reduce端的shuffle</li><li>reduce ： 接受shuffle输出的&lt;key , value&gt;,执行用户子自定义，输出给outputFromat</li><li>输出 ： outputFromat，模块会验证输出目录是不是已经存在以及输出结果是不是符合配置文件中的配置类型，如果满足，就输出reduce的结果到分布式文件系统</li></ul><h4 id="map的shuffle"><a href="#map的shuffle" class="headerlink" title="map的shuffle"></a>map的shuffle</h4><ul><li>过程有四部</li><li>输入数据并执行map任务</li><li>map任务结果输出，写入缓存</li><li>溢写 ： 如果输出结果超过了一定的比例，每一次溢写会在磁盘上生成一个磁盘文件，写入之前进行会分区，，排序，如果指定了commbiner还可以进行合并，这样经过溢写的磁盘文件就包含了多个分区，且分区内部都是经过排序的</li><li>merge ： 随着map任务的进行，当有多个溢写文件时（就是大于等于2的适合），就会发现merge，生成一个更大的磁盘文件，这个大的溢写文件也是经过排序和分区的，默认情况下每10个溢写会变成一个大文件，通常在merge过程中，如果文件数量大于3则进行combine操作，从而减少磁盘的数据量，如果只有一两个溢写，合并操作得不偿失</li></ul><h4 id="reduce的shuttle"><a href="#reduce的shuttle" class="headerlink" title="reduce的shuttle"></a>reduce的shuttle</h4><ul><li>领取数据 ： 经过map的suffle后，map的输出结果保存在磁盘，此时，需要将磁盘数据取回到reduce机器，此时如果线程被占满，同样会和map端一样开启溢写操作，reduce通过RPC询问JobTracker是不是还拥有未完成的map任务，如果有，将数据提取到reduce机器上，此时实际上是多个reduce机器，同时多线程从map机器领回数据</li><li>merge ： 一个map的shuffle结果因为拥有多个分区，所以会有不同的reduce机器取回自己的数据，而每一个reduce也从不同的map机器取回数据，如果每个reduce机器内存达到阈值，就进行溢写操作，溢写的时候一般有很多键值对可以进行merge，如果定义了combiner还可以进行合并，进行溢写操作的过程中还可以进行combine。并非是一个reduce程序从map机器上取回数据就生成一个溢写文件，而是缓存不够用，则发生溢写，如果缓存够用，则是直接在内存里进行操作</li><li>把数据输出给map任务（对一个reduce而言）：执行用户自定义的逻辑，最终输出</li></ul><h2 id="mapredurce里的数据类型"><a href="#mapredurce里的数据类型" class="headerlink" title="mapredurce里的数据类型"></a>mapredurce里的数据类型</h2><ul><li>intWritable</li><li>longWritable</li><li>等等，</li><li>就是基本数据类型加上Writable</li><li>在redurce里数据类型也是一样的</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%97%A5%E5%BF%97/">日志</category>
      
      
      
      <comments>http://example.com/2022/11/11/11-10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git</title>
      <link>http://example.com/2022/11/08/11-8/</link>
      <guid>http://example.com/2022/11/08/11-8/</guid>
      <pubDate>Tue, 08 Nov 2022 02:13:43 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&lt;/li&gt;
&lt;li&gt;Git是一个开源的分布式版</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</li><li>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</li><li>记录文件变化的 ，之后可以指定版本恢复</li></ul><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><ul><li>本地 ： 常用 ：简单 ， 缺点 ： 容易出错 ， 集成效率低下</li><li>集中 ： svn ： 缺点 ： 中央服务器出现故障就全完了</li><li>分布（目前的主流）： 解决单点故障的问题 ： git</li><li>git 可以分支 ，，且支持文件备份 ， 多个工作流</li><li></li></ul><h1 id="Git工作流程"><a href="#Git工作流程" class="headerlink" title="Git工作流程"></a>Git工作流程</h1><ul><li>从远程仓库中克隆 Git 资源作为本地仓库</li><li>从本地仓库中checkout代码然后进行代码修改</li><li>在提交本地仓库前先将代码提交到暂存区</li><li>提交修改，提交到本地仓库；本地仓库中保存修改的各个历史版本</li><li>在需要和团队成员共享代码时，可以将修改代码push到远程仓库</li><li>git 的核心概念 ： 工作区、暂存区、版本库、远程仓库</li><li>Workspace： 工作区，就是你平时存放项目代码的地方</li><li>Index &#x2F; Stage： 暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li><li>Repository： 仓库区（或版本库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</li><li>Remote： 远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li></ul><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><ul><li>每次的提交Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里这个分支叫主分支，即master分支。HEAD指针严格来说不是指向提交，而是指向master，master才是指向提交的。</li></ul><h1 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><ul><li>远程仓库分为公有远程仓库和私有远程仓库。</li></ul><h1 id="公有远程仓库"><a href="#公有远程仓库" class="headerlink" title="公有远程仓库"></a>公有远程仓库</h1><ul><li>本质和本地仓库无异，只是这个仓库①不在本地②大家可能都知道③需要将代码共享到远程仓库④可以被其他人克隆同步代码等。</li><li>一般情况下在企业中会有一个搭建在公司的远程仓库，可以让本公司内部的开发人员同步开发。而业界最富盛名的远程仓库则为github；它上面存放了非常多的开源组织、个人、企业等的开放源码库，任何都可以从上面获取源码。</li></ul><h1 id="私有远程仓库"><a href="#私有远程仓库" class="headerlink" title="私有远程仓库"></a>私有远程仓库</h1><ul><li>远程仓库实际上和本地仓库一样，纯粹为了7x24小时开机并交换大家的修改。GitHub就是一个免费托管开源代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，既不想公开源代码，又舍不得给GitHub交保护费，那就只能自己搭建一台Git服务器作为私有仓库使用。</li><li>在本地创建了一个Git仓库，又想让其他人来协作开发，此时就可以把本地仓库同步到远程仓库，同时还增加了本地仓库的一个备份。</li><li>常用的远程仓库就是github：<a href="https://github.com/">https://github.com/</a></li><li>Github支持两种同步方式“https”和“ssh”。如果使用https很简单基本不需要配置就可以使用，但是每次提交代码和下载代码时都需要输入用户名和密码。而且如果是公司配置的私有git服务器一般不提供https方式访问。</li></ul><h1 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h1><ul><li>在工程中，并不是所有文件都需要保存到版本库中的，例如“target”目录及目录下的文件就可以忽略。Git忽略文件详解可参考Git忽略文件.gitignore详解</li></ul><h1 id="常用Git命令"><a href="#常用Git命令" class="headerlink" title="常用Git命令"></a>常用Git命令</h1><ul><li>经常使用 Git ，但是很多命令还是记不住。但要熟练掌握，恐怕要记住40~60个命令，所以整理了一份常用Git命令清单。可以参考常用Git命令</li></ul><h2 id="常用的git"><a href="#常用的git" class="headerlink" title="常用的git"></a>常用的git</h2><h3 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">$ git --version   # 查看git的版本信息</span><br><span class="line">$ git config --global user.name   # 获取当前登录的用户</span><br><span class="line">$ git config --global user.email  # 获取当前登录用户的邮箱</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="登录git"><a href="#登录git" class="headerlink" title="登录git"></a>登录git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 如果刚没有获取到用户配置，则只能拉取代码，不能修改  要是使用git，你要告诉git是谁在使用</span><br><span class="line">$ git config --global user.name &#x27;userName&#x27;    # 设置git账户，userName为你的git账号，</span><br><span class="line">$ git config --global user.email &#x27;email&#x27;</span><br><span class="line"># 获取Git配置信息，执行以下命令：</span><br><span class="line">$ git config –list</span><br></pre></td></tr></table></figure><h3 id="配置https和ssh推送时保存用户名和密码"><a href="#配置https和ssh推送时保存用户名和密码" class="headerlink" title="配置https和ssh推送时保存用户名和密码"></a>配置https和ssh推送时保存用户名和密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># https提交保存用户名和密码</span><br><span class="line">$ git config --global credential.helper store</span><br><span class="line"># 生成公钥私钥，将公钥配置到GitHub，ssh提交就可以免输入用户名密码</span><br><span class="line"># 三次回车即可生成 ssh key</span><br><span class="line">$ ssh-keygen -t rsa</span><br><span class="line"># 查看已生成的公钥</span><br><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h3 id="推送到远程仓库正确流程"><a href="#推送到远程仓库正确流程" class="headerlink" title="推送到远程仓库正确流程"></a>推送到远程仓库正确流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git init # 初始化仓库</span><br><span class="line">git add .(文件name) # 添加文件到暂存区</span><br><span class="line">git commit -m &quot;first commit&quot; # 添加文件到本地仓库并提交描述信息</span><br><span class="line">git remote add origin 远程仓库地址 # 链接远程仓库，创建主分支</span><br><span class="line">git pull origin master --allow-unrelated-histories # 把本地仓库的变化连接到远程仓库主分支</span><br><span class="line">git push -u origin master # 把本地仓库的文件推送到远程仓库</span><br></pre></td></tr></table></figure><h3 id="新建本地仓库"><a href="#新建本地仓库" class="headerlink" title="新建本地仓库"></a>新建本地仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 创建一个文件夹</span><br><span class="line">$ mkdir GitRepositories    # 创建文件夹GitRepositories</span><br><span class="line">$ cd GitRepositories       # 切换到GitRepositories目录下</span><br><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"># 新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init [project-name]</span><br><span class="line"># 下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置-全局和项目"><a href="#配置-全局和项目" class="headerlink" title="配置(全局和项目)"></a>配置(全局和项目)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</span><br><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="增加-x2F-删除文件"><a href="#增加-x2F-删除文件" class="headerlink" title="增加&#x2F;删除文件"></a>增加&#x2F;删除文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add [file1][file2] ...</span><br><span class="line"># 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"># 添加每个变化前，都会要求确认</span><br><span class="line"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class="line">$ git add -p</span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h3 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"># 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"># 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"># 使用一次新的commit，替代上一次提交</span><br><span class="line"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h3 id="分支-1"><a href="#分支-1" class="headerlink" title="分支"></a>分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"># 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"># 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"># 切换到上一个分支</span><br><span class="line">$ git checkout -</span><br><span class="line"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"># 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br><span class="line">#强制删除分支</span><br><span class="line">$ git branch -D [branch-name]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"># 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"># 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"># 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"># 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 查看目录</span><br><span class="line">$ ls -al或者$ ll</span><br><span class="line"># 查看仓库状态，显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"># 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"># 搜索提交历史，根据关键词</span><br><span class="line">$ git log -S [keyword]</span><br><span class="line"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="line">$ git log [tag] HEAD --pretty=format:%s</span><br><span class="line"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class="line">$ git log [tag] HEAD --grep feature</span><br><span class="line"># 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"># 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"># 显示过去5次提交</span><br><span class="line">$ git log -5 --pretty --oneline</span><br><span class="line"># 显示所有提交过的用户，按提交次数排序</span><br><span class="line">$ git shortlog -sn</span><br><span class="line"># 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"># 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"># 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"># 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"># 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"># 显示今天你写了多少行代码</span><br><span class="line">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class="line"># 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"># 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"># 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"># 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br><span class="line"># 以图形化界面展示 分支的commit 历史</span><br><span class="line">$ git log --oneline --gragh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"># 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"># 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"># 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line">$ git fetch 也同上</span><br><span class="line">$ git pull 相当 fetch ＋ merge</span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"># 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br><span class="line">$ push推的是分支不是代码</span><br><span class="line"># 可以选择那个远程仓库那个分支</span><br><span class="line">$ git push [&lt;repository&gt; [&lt;分支的名字&gt;]]</span><br><span class="line">$ git fetch</span><br><span class="line">$ git fetch --all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"># 从工作区撤回文件</span><br><span class="line">$ git restore --staged xxxx xxx xxx... </span><br><span class="line">#从暂存区到工作区撤回</span><br><span class="line">$ git restore xxx xxx xxx..</span><br><span class="line"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"># 恢复暂存区的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"># 新建一个commit，用来撤销指定commit</span><br><span class="line"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br><span class="line"># 暂时将未提交的变化移除，稍后再移入</span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 从当前目录的所有文件中查找文本内容：</span><br><span class="line">$ git grep &quot;Hello&quot;</span><br><span class="line"># 在某一版本中搜索文本：</span><br><span class="line">$ git grep &quot;Hello&quot; v2.5</span><br><span class="line"># 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>当工作区和暂存区都有的时候</li><li>直接更改工作区的文件 通过</li><li>commit -am “xx”</li><li>可以直接把修改了的文件传到本地仓库</li><li>merge : 经过merge的文件 ， 相当于把其他地方的分支给回收回来 ，</li></ul><h3 id="git文件夹的目录介绍"><a href="#git文件夹的目录介绍" class="headerlink" title=".git文件夹的目录介绍"></a>.git文件夹的目录介绍</h3><ul><li>HEAD ： 当前项目正在工作的分支</li><li>config ： 我们当前项目的一些配置信息（我们本地的配置信息）</li><li>可以通过 <code>git config --local user.name &quot;xxx&quot;</code> 来进行设置</li><li>或者直接在这个文件按照格式改也一样</li><li>同样 ， 有set就有get</li><li>refs ： 指向的是那个分支的指向</li><li>commit 的hash值对应的是什么内容的</li><li>object : git真正的存储对象 </li><li><code>git cat-file</code> </li><li><code>-t</code> : 文件类型</li><li><code>-p</code> : 文件内容</li><li><code>tree</code> ： 代表是文件夹</li><li><code>blob</code> ： 代表文件内容</li><li>git 存储文件高效的原因 ： 不同的文件只要有相同的地方就是一个blob</li></ul><h3 id="查看git文件存储的方法"><a href="#查看git文件存储的方法" class="headerlink" title="查看git文件存储的方法"></a>查看git文件存储的方法</h3><ul><li>我们先进入到.git的object文件夹里 ，因为object文件夹是git存储的首要位置</li><li>接下来 ，我们找到refs的文件 ，然后进入到heads里</li><li>找到文件 ，里面有我们的commit的哈希值</li><li>通过哈希值的前两个字母</li><li>我们在object文件夹下 ，找到这两个字符的文件夹</li><li>点进去查看文件名字</li><li>然后我们在命令行</li><li>输入<code>git cat-file -p</code></li><li>和<code>git cat-file -t</code></li><li>就可以查看到文件的类型和文件的内容</li><li>对于文件的内容，我们可以对于上次-p出来的文件再次进行 -p操作 哈希值 ，</li><li>就可以看见了</li><li>修改之前的某个commit的message</li><li>可以用 <code>git rebase</code></li><li>git rebase -i &lt;after - this - commit&gt;: 交互式 : 基于前一个commit 进行修改当前的commit ，这样修改了之后所有的hash值会改变，因为变头了 ，但是如果先进行了 ， <code>git cherry-pick</code>操作,则会把吗，master和以前的分支都改变（hash），但是一般是不带master等其他分支的</li><li>常用的操作</li><li>-p ： </li><li>-r ： 重写一个commit的message</li><li>-e ： </li><li>-s ： 合并多个commit的message</li><li>输入上面的那个命令之后我们要进入到一个界面</li><li>把要修改的前面改成 r</li><li>然后保存退出</li><li>然后就会跳转到另外可以编辑这个要编辑的conmmit的地方</li><li>就改掉message就好</li><li>合并本地message 要在本地合并 ，不能在远程合并</li><li>把多个commit合并成一个commit的操作和上面一样 ，只不过是把r改成s了</li><li>但是这样合并之后，你相当于把这些信息合并到一起 ，就把最上面的那个看成是一个集合</li><li>这样之后一般会放到 .git文件之下的 ， rebase</li></ul><h2 id="忽略文件-1"><a href="#忽略文件-1" class="headerlink" title="忽略文件"></a>忽略文件</h2><ul><li><code>.gitignore</code>文件就是忽略文件</li></ul><h2 id="仓库备份"><a href="#仓库备份" class="headerlink" title="仓库备份"></a>仓库备份</h2><ul><li>git clone ： 就是克隆&#x2F;备份</li><li>克隆一个仓库到一个新的文件夹</li><li>git clone &lt;仓库&gt; &lt;名字&gt;</li><li>这个仓库是本地或者远程仓库</li><li>仓库 ： 可以接url，或者本地的.git文件</li><li>克隆到名字的文件夹里 ，如果么没有则创建</li><li>本地备份本地不常用</li><li>一般都是备份远程仓库</li><li>对于远程仓库的地址 ，则是为我们通过查看远程仓库的地址进行</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%97%A5%E5%BF%97/">日志</category>
      
      
      
      <comments>http://example.com/2022/11/08/11-8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>jdbc</title>
      <link>http://example.com/2022/11/07/11-7/</link>
      <guid>http://example.com/2022/11/07/11-7/</guid>
      <pubDate>Mon, 07 Nov 2022 13:58:43 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Maven&quot;&gt;&lt;a href=&quot;#Maven&quot; class=&quot;headerlink&quot; title=&quot;Maven&quot;&gt;&lt;/a&gt;Maven&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。</li><li>注意是工具</li></ul><h2 id="Maven的配置以及idea使用"><a href="#Maven的配置以及idea使用" class="headerlink" title="Maven的配置以及idea使用"></a>Maven的配置以及idea使用</h2><h3 id="下载及解压"><a href="#下载及解压" class="headerlink" title="下载及解压"></a>下载及解压</h3><ul><li>首先在Maven的官网下载Maven</li><li><a href="http://maven.apache.org/download.cgi" title="Maven官网">Maven官网</a></li><li>我们windows一般下载 ： Binary zip archive的</li><li>我这里下载的是 apache-maven-3.8.6-bin.zip</li><li>下载完之后 ， 解压到一个文件目录下 </li><li>我是新建了个文件目录 命名为 maven</li><li>如何解压到文件目录下</li></ul><h3 id="配置相关文件"><a href="#配置相关文件" class="headerlink" title="配置相关文件"></a>配置相关文件</h3><ul><li>解压成功之后 ，我们会获得几个文件夹</li><li>bin</li><li>boot</li><li>conf</li><li>lib</li><li>这个里conf是maven的配置文件</li><li>我们在这个目录下新建maven_repossitory文件夹</li><li>这个文件夹可以作为，我们的本地仓库</li><li>接下来，我们要修改 conf 文件夹下</li><li>settings.xml文件</li><li>我们先找到</li><li><code>&lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</code></li><li>这条语句的位置</li><li>把它更改成</li><li><code>&lt;localRepository&gt;你的maven_repossitory路径&lt;/localRepository&gt;</code></li><li>这样我们就自己创建了个</li><li>因为一般maven的默认仓库是</li><li><code>C:\Users\Administrator\.m2\repository</code></li><li>接下来 ， 我们进行设置国内镜像源</li><li>找到 mirrors 标签</li><li>在mirrors里</li><li>加上：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">&lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">&lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>这个是阿里云的镜像 ， 如果不好使 可以以换成腾讯云 和网易的</li><li>添加方法和上面一样</li><li>接下来我们可以为maven配置全局的jdk，这样我们在创建maven项目时就会自动使用该jdk版本，我配置的是jdk1.8</li><li>找到标签 <profiles></profiles></li><li>然后在标签里加入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- java版本 --&gt; </span><br><span class="line">&lt;profile&gt;</span><br><span class="line">  &lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">  &lt;activation&gt;</span><br><span class="line">&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">&lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">  &lt;/activation&gt;</span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">&lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">&lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">&lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line">&lt;/profile&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="更改idea的maven"><a href="#更改idea的maven" class="headerlink" title="更改idea的maven"></a>更改idea的maven</h3><ul><li>file 文件里的 setting</li><li>在上面搜索 maven</li><li>点进去之后</li><li>把Maven home directory</li><li>配置成自己的解压的文件夹</li><li>然后设置user setting file</li><li>把他设置成解压的文件的setting.xml</li><li>然后把 local repository</li><li>设置成之前自己配置的本地仓库</li><li>关于idea的配置就完成了</li></ul><h2 id="简单的链接mysql"><a href="#简单的链接mysql" class="headerlink" title="简单的链接mysql"></a>简单的链接mysql</h2><ul><li>首先创建maven项目</li><li>然后在pom.xml中加上</li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;5.1.28&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>在<dependencies>标签中加上</li><li>然后import change</li><li>然后在主程序的java项目包里</li><li>写上：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Hello world!</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class App </span><br><span class="line">&#123;</span><br><span class="line">    public static void main( String[] args )</span><br><span class="line">    &#123;</span><br><span class="line">        String url = &quot;jdbc:mysql://192.168.41.131:3306/try&quot;;</span><br><span class="line">        String user = &quot;root&quot;;</span><br><span class="line">        String passwd = &quot;liuzihan010616&quot;;</span><br><span class="line"></span><br><span class="line">        Connection conect = dbutils.getConnection(url , user , passwd);</span><br><span class="line"></span><br><span class="line">        System.out.println(conect);</span><br><span class="line">        dbutils.closeConnection(conect);</span><br><span class="line"></span><br><span class="line">        System.out.println( &quot;Hello World!&quot; );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-然后创建一个dbutils</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author sxwang</span><br><span class="line"> * 11 07 15:02</span><br><span class="line"> */</span><br><span class="line">public class dbutils &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取mysql 连接</span><br><span class="line">     * @param url</span><br><span class="line">     * @param user</span><br><span class="line">     * @param passwd</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static Connection getConnection(String url, String user, String passwd)&#123;</span><br><span class="line"></span><br><span class="line">        Connection connection=null;</span><br><span class="line">        try &#123;</span><br><span class="line">            Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">            try &#123;</span><br><span class="line">                connection = DriverManager.getConnection(url, user, passwd);</span><br><span class="line">            &#125; catch (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭连接</span><br><span class="line">     * @param conn</span><br><span class="line">     */</span><br><span class="line">    public static void closeConnection(Connection conn)&#123;</span><br><span class="line"></span><br><span class="line">        if(conn !=null)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; catch (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Mysql对表的操作"><a href="#Mysql对表的操作" class="headerlink" title="Mysql对表的操作"></a>Mysql对表的操作</h2><ul><li>alter table 旧表名 rename to 新表名 ： 更改表名字</li><li>alter table 表名 modify 列名 数据类型 ： 修改数据类型</li><li>alter table 表名 change 旧表名 新列名 数据类型 ： 修改列名</li><li>alter table 表名 drop 列名 ： 删除列</li><li>alter table 表名 add 新列名 数据类型</li><li>alter table 表名 modify 列名1 数据类型 after 列名2；</li><li>alter table 表明 modify 列名1 数据类型 first</li><li>清空表 </li><li>建议</li><li>truncate table xxx<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">insert into xxx</span><br><span class="line">select xxx from xxx</span><br></pre></td></tr></table></figure></li><li>create</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">create table ...like xxxx</span><br><span class="line">create table xxx like mmm</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>基于xxx表创建新表</li><li>但是，是空表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">create table ..[as]select xxxx from kkk</span><br><span class="line">create table emp_dev01 as select ename,job</span><br><span class="line">from emp</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>基于其select的表给生成一个表</li><li>叫ctas</li><li>可以用别名该表头</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%97%A5%E5%BF%97/">日志</category>
      
      
      
      <comments>http://example.com/2022/11/07/11-7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sql练习</title>
      <link>http://example.com/2022/11/05/sql%E7%BB%83%E4%B9%A0/</link>
      <guid>http://example.com/2022/11/05/sql%E7%BB%83%E4%B9%A0/</guid>
      <pubDate>Fri, 04 Nov 2022 17:05:34 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">create database bigdata;</span><br><span class="line">use bigdata;</span><br><span class="line"></span><br><span class="line">--部门表</span><br><span class="line">dept部门表(deptno部门编号/dname部门名称/loc地点)</span><br><span class="line">create table dept (</span><br><span class="line">    deptno numeric(2),</span><br><span class="line">    dname varchar(14),</span><br><span class="line">    loc varchar(13)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into dept values (10, &#x27;ACCOUNTING&#x27;, &#x27;NEW YORK&#x27;);</span><br><span class="line">insert into dept values (20, &#x27;RESEARCH&#x27;, &#x27;DALLAS&#x27;);</span><br><span class="line">insert into dept values (30, &#x27;SALES&#x27;, &#x27;CHICAGO&#x27;);</span><br><span class="line">insert into dept values (40, &#x27;OPERATIONS&#x27;, &#x27;BOSTON&#x27;);</span><br><span class="line"></span><br><span class="line">--工资等级表</span><br><span class="line">salgrade工资等级表(grade 等级/losal此等级的最低/hisal此等级的最高)</span><br><span class="line">create table salgrade (</span><br><span class="line">    grade numeric,</span><br><span class="line">    losal numeric,</span><br><span class="line">    hisal numeric</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into salgrade values (1, 700, 1200);</span><br><span class="line">insert into salgrade values (2, 1201, 1400);</span><br><span class="line">insert into salgrade values (3, 1401, 2000);</span><br><span class="line">insert into salgrade values (4, 2001, 3000);</span><br><span class="line">insert into salgrade values (5, 3001, 9999);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--员工表</span><br><span class="line">emp员工表(empno员工号/ename员工姓名/job工作/mgr上级编号/hiredate受雇日期/sal薪金/comm佣金/deptno部门编号)</span><br><span class="line">工资 ＝ 薪金 ＋ 佣金</span><br><span class="line"></span><br><span class="line">create table emp (</span><br><span class="line">    empno numeric(4) not null,</span><br><span class="line">    ename varchar(10),</span><br><span class="line">    job varchar(9),</span><br><span class="line">    mgr numeric(4),</span><br><span class="line">    hiredate datetime,</span><br><span class="line">    sal numeric(7, 2),</span><br><span class="line">    comm numeric(7, 2),</span><br><span class="line">    deptno numeric(2)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">insert into emp values (7369, &#x27;SMITH&#x27;, &#x27;CLERK&#x27;, 7902, &#x27;1980-12-17&#x27;, 800, null, 20);</span><br><span class="line">insert into emp values (7499, &#x27;ALLEN&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-02-20&#x27;, 1600, 300, 30);</span><br><span class="line">insert into emp values (7521, &#x27;WARD&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-02-22&#x27;, 1250, 500, 30);</span><br><span class="line">insert into emp values (7566, &#x27;JONES&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-04-02&#x27;, 2975, null, 20);</span><br><span class="line">insert into emp values (7654, &#x27;MARTIN&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-09-28&#x27;, 1250, 1400, 30);</span><br><span class="line">insert into emp values (7698, &#x27;BLAKE&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-05-01&#x27;, 2850, null, 30);</span><br><span class="line">insert into emp values (7782, &#x27;CLARK&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-06-09&#x27;, 2450, null, 10);</span><br><span class="line">insert into emp values (7788, &#x27;SCOTT&#x27;, &#x27;ANALYST&#x27;, 7566, &#x27;1982-12-09&#x27;, 3000, null, 20);</span><br><span class="line">insert into emp values (7839, &#x27;KING&#x27;, &#x27;PRESIDENT&#x27;, null, &#x27;1981-11-17&#x27;, 5000, null, 10);</span><br><span class="line">insert into emp values (7844, &#x27;TURNER&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-09-08&#x27;, 1500, 0, 30);</span><br><span class="line">insert into emp values (7876, &#x27;ADAMS&#x27;, &#x27;CLERK&#x27;, 7788, &#x27;1983-01-12&#x27;, 1100, null, 20);</span><br><span class="line">insert into emp values (7900, &#x27;JAMES&#x27;, &#x27;CLERK&#x27;, 7698, &#x27;1981-12-03&#x27;, 950, null, 30);</span><br><span class="line">insert into emp values (7902, &#x27;FORD&#x27;, &#x27;ANALYST&#x27;, 7566, &#x27;1981-12-03&#x27;, 3000, null, 20);</span><br><span class="line">insert into emp values (7934, &#x27;MILLER&#x27;, &#x27;CLERK&#x27;, 7782, &#x27;1982-01-23&#x27;, 1300, null, 10);</span><br><span class="line"></span><br><span class="line">1.查询出部门编号为30的所有员工的编号和姓名</span><br><span class="line"></span><br><span class="line">table： emp</span><br><span class="line">查什么： </span><br><span class="line">1.维度：group by</span><br><span class="line">2.指标: 聚合函数</span><br><span class="line">3.普普通通的字段：编号和姓名</span><br><span class="line">怎么查：</span><br><span class="line">where：</span><br><span class="line">部门编号为30</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.找出部门编号为10中所有经理，和部门编号为20中所有销售员的详细资料。</span><br><span class="line">3.查询所有员工详细信息，用工资降序排序，如果工资相同使用入职日期升序排序</span><br><span class="line">4.列出薪金大于1500的各种工作及从事此工作的员工人数。</span><br><span class="line">5.列出在销售部工作的员工的姓名，假定不知道销售部的部门编号。</span><br><span class="line">6.查询姓名以S开头的\以S结尾\包含S字符\第二个字母为L  __</span><br><span class="line">7.查询每种工作的最高工资、最低工资、人数</span><br><span class="line">8.列出薪金 高于 公司平均薪金的所有员工号，员工姓名，所在部门名称，上级领导，工资，工资等级</span><br><span class="line">9.列出薪金  高于  在各自部门工作的员工的平均薪金的员工姓名和薪金、部门名称。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">80% sqlboy sqlgirl</span><br><span class="line">20% 大数据平台</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="结题"><a href="#结题" class="headerlink" title="结题"></a>结题</h1><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><ul><li>查询出部门编号为30的所有员工的编号和姓名</li><li>确定部门编号的条件 where deptno &#x3D; 30</li><li>确定所要的信息 ename ， epmpno</li><li>从员工表里筛选</li><li><code> select empno ,ename from emp where deptno = 30;</code></li><li><code> select empno ,ename from emp where deptno in (30);</code></li></ul><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><ul><li>找出部门编号为10中所有经理，和部门编号为20中所有销售员的详细资料。</li><li>确定条件 ： </li><li>职业为经理的（MANAGER） ，部门编号为 10</li><li>职业为销售员的（SALESMAN） ， 部门编号为 20</li></ul><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><ul><li><code>select * from emp where job = &quot;MANAGER&quot; and deptno = 10;</code></li><li><code>select * from emp where job = &quot;SALESMAN&quot; and  deptno = 20;</code></li></ul><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><ul><li><code>select * from emp where job in (&quot;MANAGER&quot;) and deptno = 10;</code></li><li><code>select * from emp where job in (&quot;SALESMAN&quot;) and  deptno = 20;</code></li></ul><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><ul><li><code>select * from emp where job in (&quot;SALESMAN&quot;) and  deptno = 20;</code></li><li><code>select * from emp where job in (&quot;MANAGER&quot;) and deptno = 10;</code></li></ul><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><ul><li><code>select * from emp where (job, deptno) in ((&quot;SALESMAN&quot;, 20));</code></li><li><code>select * from emp where (job, deptno) in ((&quot;MANAGER&quot;, 10));</code></li></ul><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><ul><li><code>select * from emp where (job, deptno) in ((&quot;SALESMAN&quot;, 20)  , (&quot;MANAGER&quot;, 10));</code></li></ul><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><ul><li>查询所有员工详细信息，用工资降序排序，如果工资相同使用入职日期升序排序</li><li>条件 ：工资和入职时间</li><li>工资 ＝ 薪金 ＋ 佣金</li><li>但是mysql里一个值和null相加会变成null</li><li>通过 ifnull  或者 coalesce  进行转化</li><li>所以要转化 </li><li>这个题有两种解法</li></ul><h3 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h3><ul><li>先转化</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">(sal + yy) as hh ,</span><br><span class="line">(sal + kk) as ii,</span><br><span class="line">hiredate</span><br><span class="line">from (</span><br><span class="line">    select</span><br><span class="line">    hiredate,</span><br><span class="line">    sal,</span><br><span class="line">    ifnull(comm , 0) as yy,</span><br><span class="line">    coalesce(comm , 0) as kk</span><br><span class="line">    from emp</span><br><span class="line">) as hyy</span><br><span class="line">order by hh desc,hiredate asc;</span><br></pre></td></tr></table></figure><h3 id="2-1"><a href="#2-1" class="headerlink" title="2"></a>2</h3><ul><li>转化和展示一起做</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">hiredate,</span><br><span class="line">ifnull((sal + comm) , sal) as total,</span><br><span class="line">coalesce((sal + comm) , sal) as ti</span><br><span class="line">from emp</span><br><span class="line">order by total desc , hiredate asc;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><ul><li>列出薪金大于1500的各种工作及从事此工作的员工人数</li><li>条件 ： 薪金 就是<code>sal &gt; 1500</code> 的<code>工作</code> 求<code>人数</code></li><li>薪金的条件可以用<code>where</code> 或者<code>having</code></li><li>工作可以用<code>group by job</code></li><li>人数可以用count</li></ul><h3 id="1-2"><a href="#1-2" class="headerlink" title="1"></a>1</h3><ul><li><code>select job, count(*) from emp where sal &gt; 1500 group by job;</code></li></ul><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><ul><li>列出在销售部工作的员工的姓名，假定不知道销售部的部门编号</li><li>条件 ：  不知道部门编号 但是我们可以从表中获取</li></ul><h3 id="1-3"><a href="#1-3" class="headerlink" title="1"></a>1</h3><ul><li><code>select ename from emp left join dept on dept.deptno = emp.deptno where dname = &quot;SALES&quot; ;</code></li></ul><h3 id="2-2"><a href="#2-2" class="headerlink" title="2"></a>2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select ename from emp where (</span><br><span class="line">    select </span><br><span class="line">    deptno</span><br><span class="line">    from dept</span><br><span class="line">    where dname = &quot;SALES&quot; </span><br><span class="line">) = emp.deptno ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select ename from emp where deptno in (</span><br><span class="line">    select </span><br><span class="line">    deptno</span><br><span class="line">    from dept</span><br><span class="line">    where dname = &quot;SALES&quot; </span><br><span class="line">) ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><ul><li>查询姓名以S开头的\以S结尾\包含S字符\第二个字母为L</li><li>两种方式 like 或者正则</li></ul><h3 id="1-4"><a href="#1-4" class="headerlink" title="1"></a>1</h3><ul><li><code>select ename from emp where ename like &quot;%s%&quot; or  ename like &quot;_L&quot;; </code></li></ul><h3 id="2-3"><a href="#2-3" class="headerlink" title="2"></a>2</h3><ul><li><code>select ename from emp where ename REGEXP &#39;*s*&#39;or ename REGEXP &#39;^.L&#39;;</code></li></ul><h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><ul><li>查询每种工作的最高工资、最低工资、人数</li><li>条件 ： <code>工资</code> ， <code>最高工资</code> ， <code>最低工资</code> ， <code>人数</code></li><li>这个题目前我所想到的有两种</li><li>第一是慢慢做 ，用嵌套的方式 ，</li><li>优点 ： 不用动脑</li><li>缺点 ： 代码量比较多</li><li>第二个是第一个的优化版本 </li><li>优点 ： 代码量少很多</li><li>缺点 : 难理解</li><li></li></ul><h3 id="1-5"><a href="#1-5" class="headerlink" title="1"></a>1</h3><ul><li>我们先获取基本的数据源  </li><li>获取工资的情况 ，以及各种职业所对应的工资 及其人数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select </span><br><span class="line">(ifnull((sal + comm) , sal)) as sal1,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job,sal1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来是获取最高工资 和最低工资 ，以及工作的种类 ,以及总人数（最高工资，以及最低工资的）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select max(sal1),min(sal1),job,count(*)</span><br><span class="line">from(select </span><br><span class="line">(ifnull((sal + comm) , sal)) as sal1,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job,sal1) as king group by job;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来 我们只需要连接上述的两个表 </li><li>一个表里对应的是每个人所对应的工资以及职业</li><li>因为一个表里是我们的最高的工资，最低的工资以及他所对应的工作 和总人数</li><li>相当于第二个表当我们的筛选条件 ， 如果符合筛选条件 就从第一个表选出这条数据</li><li>然后获得符合条件的人数</li><li>根据以上分析 ， 我们采用左连接的方式 ，</li><li>内连接可能会丢值 ，不过在此题中不会丢值</li><li>如下 ：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select </span><br><span class="line">sal1,</span><br><span class="line">max_sal,</span><br><span class="line">min_sal,</span><br><span class="line">tjob,</span><br><span class="line">total_people</span><br><span class="line">from(</span><br><span class="line">select max(sal1) as max_sal,min(sal1) as min_sal,job as tjob,count(*)</span><br><span class="line">from(select </span><br><span class="line">(ifnull((sal + comm) , sal)) as sal1,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job,sal1) as king group by job) as KING  </span><br><span class="line">left join </span><br><span class="line">(</span><br><span class="line">select </span><br><span class="line">(ifnull((sal + comm) , sal)) as sal1,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job,sal1) as yu  </span><br><span class="line">on KING.tjob = yu.job and yu.sal1 = KING.max_sal or yu.sal1 = KING.min_sal; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4"><a href="#2-4" class="headerlink" title="2"></a>2</h3><ul><li>第二种方法 ， 我们所采用的是union</li><li>而不是连接</li><li>我们先获取 每种工作的 最高工资 和最低工资 以及工作种类 ，以及总共人数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">               max(ifnull((sal + comm) , sal)) as sal_max,</span><br><span class="line">               min(ifnull((sal + comm) , sal)) as sal_min,</span><br><span class="line">               job,</span><br><span class="line">               count(*) as total_people</span><br><span class="line">               from emp group by job;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后我们现在要做的就是统计人数了</li><li>我们要先判断他的最大工资和11最小工资是不是相等</li><li>因为相等的话，他会默认把一个人分最大，一个人分最小</li><li>所以要分开</li><li>下面就是如果最大工资和最小工资相等的时候的做法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">total_people as max_people ,(sal_max - sal_max) as min_people,job,sal_max,sal_min</span><br><span class="line">from(select </span><br><span class="line">max(ifnull((sal + comm) , sal)) as sal_max,</span><br><span class="line">min(ifnull((sal + comm) , sal)) as sal_min,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job)  as king  group  by job having sal_max = sal_min;</span><br></pre></td></tr></table></figure><ul><li>下面是不相等的时候</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">count(sal_max) as max_people,count(sal_min) as min_people,job,sal_max,sal_min</span><br><span class="line">from(select </span><br><span class="line">max(ifnull((sal + comm) , sal)) as sal_max,</span><br><span class="line">min(ifnull((sal + comm) , sal)) as sal_min,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job)  as king  group  by job having sal_max != sal_min</span><br></pre></td></tr></table></figure><ul><li>我这里是用的<code>having</code> ， 因为我把条件放在<code>group by</code>后面了 ，这两个也可用where的不过要放在<code>group by</code>之前</li><li>接下来，我们用union就可以 ， 因为 我把他们的别名起的一样 ，而且列也能对的上</li><li>我们就可以直接用union了</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">count(sal_max) as max_people,count(sal_min) as min_people,job,sal_max,sal_min</span><br><span class="line">from(select </span><br><span class="line">max(ifnull((sal + comm) , sal)) as sal_max,</span><br><span class="line">min(ifnull((sal + comm) , sal)) as sal_min,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job)  as king where sal_max != sal_min group  by job </span><br><span class="line">union</span><br><span class="line">select </span><br><span class="line">total_people as max_people ,(sal_max - sal_max) as min_people,job,sal_max,sal_min</span><br><span class="line">from(select </span><br><span class="line">max(ifnull((sal + comm) , sal)) as sal_max,</span><br><span class="line">min(ifnull((sal + comm) , sal)) as sal_min,</span><br><span class="line">job,</span><br><span class="line">count(*) as total_people</span><br><span class="line">from emp group by job)  as king  group  by job having sal_max = sal_min;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第七题的附加题"><a href="#第七题的附加题" class="headerlink" title="第七题的附加题"></a>第七题的附加题</h2><ul><li>找出最高的工资 最低工资 以及人数 ，职业</li><li>这个是我没读题的时候 ，看错题意了 ，结果做出个这么个玩意 ，姑且也当作一个题把。</li><li>条件 ： 所有工作中 ，<code>最高工资</code> , <code>最低工资</code> ， <code>人数</code></li></ul><h3 id="1-6"><a href="#1-6" class="headerlink" title="1"></a>1</h3><ul><li>对于这个问题 ， 我们要先找到数据源 ，就是说，我们现在需要最大工资 和最小工资 ，那么为我们要先搞出这样有一个表</li><li><code>select max(ifnull((sal + comm) , sal)) as max_sal, min(coalesce((sal + comm) , sal)) as min_sal,count(*) from emp ;</code></li><li>这个是统计所有工作中的最大和最小工资</li><li>然后我们要找出人数以及职业</li><li>这相当于我们现在有了最大最小的筛选条件 ，去有工资和职业，以及人数的表中筛选就好</li><li>接下来，我们就要创建一个表有工资和职业，以及人数</li><li><code>select job, (ifnull((sal + comm) , sal)) as sal1,count(sal) as total_people from emp  group by sal1 , job;</code></li><li>接下来我们就要进行筛选了 ， 最简单的筛选就是把两个表链接上</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">sal1,</span><br><span class="line">job,</span><br><span class="line">total_people</span><br><span class="line">from(select max(ifnull((sal + comm) , sal)) as max_sal, min(coalesce((sal + comm) , sal))  as min_sal from emp ) as king </span><br><span class="line"></span><br><span class="line">left join </span><br><span class="line"></span><br><span class="line">(select job, (ifnull((sal + comm) , sal)) as sal1,count(sal) as total_people from emp  group by sal1 , job) as kk </span><br><span class="line">on max_sal = sal1 or min_sal =sal1 ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>但是做到这里其实还可以进行优化 ， 我们可以不用链接 ， 但是上述链接是小表驱动大表的，我们也可以反过来</li><li>但是用in的时候我们不能用一列去匹配两列</li><li>因为我们最开始的数据源，分出来的是两列</li><li>现在我们要通过别名，把两列变成一列</li><li><code>select max(ifnull((sal + comm) , sal)) as sal from emp union select min(coalesce((sal + comm) , sal))  as sal from emp;</code></li><li>然后我们就可以用where进行匹配了</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">sal1,</span><br><span class="line">job,</span><br><span class="line">total_people</span><br><span class="line">from(select job, (ifnull((sal + comm) , sal)) as sal1,count(sal) as total_people from emp  group by sal1 , job) as kk </span><br><span class="line">where sal1 in (select max(ifnull((sal + comm) , sal)) as sal from emp union select min(coalesce((sal + comm) , sal))  as sal from emp);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>这里的in也可以用等号替代 ，只不过如果是等号，那么你后面的条件要拆开 ，而且 中间要用or</li></ul><h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><ul><li>列出薪金 高于 公司平均薪金的所有员工号，员工姓名，所在部门名称，上级领导，工资，工资等级</li><li>条件 ： <code>薪金</code>高于 <code>平均薪金</code> ， <code>工资等级</code> ，<code>部门名称</code> </li><li>通过以上条件我们可知 ，这个是三个表都要用到的</li></ul><h3 id="1-7"><a href="#1-7" class="headerlink" title="1"></a>1</h3><ul><li>老样子 ： 我们要先获取基本的数据源</li><li><code>select avg(sal) as sal_avg from emp</code></li><li>上述是获取平均薪金 ，是要作为我们的判断条件的</li><li>然后求出薪金大于平均薪金的 进行初步筛选</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来我们要把初步筛选完成的表 和 部门表联合起来 ，原因是 部门表有部门编号作为连接点</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno; </span><br></pre></td></tr></table></figure><ul><li>现在除了工资等级 ，和工资，其余的我们全都有了、</li><li>接下来，我们先加上工资 ，然后根据工资进行判断等级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">(sal + commchange) as earn</span><br><span class="line">from(</span><br><span class="line">select</span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">ifnull(comm , 0) as commchange</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno) as setlist;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来，我们要加上工资等级</li><li>在这里，我就偷个懒 因为平均薪金是2200多，那么你工资必不可能比这个少</li><li>那么工资等级也就不会是3及以下</li><li>一般的话是条件都要判断的 ，我这里就偷个懒</li><li>接下来，我们设置筛选条件 ，  因为工资等级没有能和别的表联合 ，或者union的列 ，那么我们只能一个个判断了</li><li>我们先判断大于3000的 并给与工资等级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">earn,</span><br><span class="line">((empno + 5) - empno) as level</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">(sal + commchange) as earn</span><br><span class="line">from(</span><br><span class="line">select</span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">ifnull(comm , 0) as commchange</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno) as setlist) as sal_tables where earn &gt;3000;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来是小于3000的</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">earn,</span><br><span class="line">((empno + 4) - empno) as level</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">(sal + commchange) as earn</span><br><span class="line">from(</span><br><span class="line">select</span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">ifnull(comm , 0) as commchange</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno) as setlist) as sal_tables where earn &gt;2000 and earn &lt;=3000;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>注意我这里是偷懒了，没有判断2000和更低的，原因在上面 ，如果想判断和上面两个一样</li><li>接下来 我们用unio  把他们链接到一起</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">earn,</span><br><span class="line">((empno + 5) - empno) as level</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">(sal + commchange) as earn</span><br><span class="line">from(</span><br><span class="line">select</span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">ifnull(comm , 0) as commchange</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno) as setlist) as sal_tables where earn &gt;3000</span><br><span class="line">union</span><br><span class="line">select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">earn,</span><br><span class="line">((empno + 4) - empno) as level</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">(sal + commchange) as earn</span><br><span class="line">from(</span><br><span class="line">select</span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">sal,</span><br><span class="line">mgr,</span><br><span class="line">deptno1,</span><br><span class="line">dname,</span><br><span class="line">ifnull(comm , 0) as commchange</span><br><span class="line">from(select </span><br><span class="line">comm,</span><br><span class="line">empno,</span><br><span class="line">ename,</span><br><span class="line">deptno as deptno1,</span><br><span class="line">sal,</span><br><span class="line">mgr</span><br><span class="line">from emp where sal &gt; (select </span><br><span class="line">avg(sal)</span><br><span class="line">from emp)) as Oavg_table left join dept on Oavg_table.deptno1=dept.deptno) as setlist) as sal_tables where earn &gt;2000 and earn &lt;=3000;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>就可以了 ，上面的我做法是我没动脑子，直接一点点搞出来的</li></ul><h3 id="2-5"><a href="#2-5" class="headerlink" title="2"></a>2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select empno,ename,dname,sal,mgr,ifnull((sal + comm) , sal) as earn , (sal + 5  - sal) as  level from (select * from emp where sal &gt; (select avg(sal) from  emp))  as king left join dept on king.deptno=dept.deptno having earn &gt;  3000</span><br><span class="line">union </span><br><span class="line">select empno,ename,dname,sal,mgr,ifnull((sal + comm) , sal) as earn , (sal + 4  - sal) as  level from (select * from emp where sal &gt; (select avg(sal) from  emp))  as king left join dept on king.deptno=dept.deptno having earn &lt;= 3000;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2"><a href="#3-2" class="headerlink" title="3"></a>3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">select </span><br><span class="line">king.ename,</span><br><span class="line">king.empno,</span><br><span class="line">e1.ename as leader,</span><br><span class="line">king.earn,</span><br><span class="line">case when earn Between 700 and 1200 then 1</span><br><span class="line">     when earn Between 1200 and 1400 then 2</span><br><span class="line">     when earn Between 1400 and 2000 then 3</span><br><span class="line">     when earn Between 2000 and 3000 then 4</span><br><span class="line">     when earn Between 3000 and 9990 then 5</span><br><span class="line">     end</span><br><span class="line">as sallevel</span><br><span class="line">from (</span><br><span class="line">  select ename , empno , deptno , ifnull((sal + comm),sal) as earn ,mgr </span><br><span class="line">  from emp</span><br><span class="line">  where sal &gt; (</span><br><span class="line">    select avg(sal)</span><br><span class="line">    from emp</span><br><span class="line">  )</span><br><span class="line">) as king </span><br><span class="line">left join dept on king.deptno=dept.deptno </span><br><span class="line">left join emp e1 on king.mgr = e1.empno;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-1"><a href="#4-1" class="headerlink" title="4"></a>4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">// 最好不用 ，因为笛卡尔积 会造成数据膨胀</span><br><span class="line">   select </span><br><span class="line">   king.ename,</span><br><span class="line">   king.empno,</span><br><span class="line">   e1.ename as leader,</span><br><span class="line">   king.earn,</span><br><span class="line">   s.grade</span><br><span class="line">   as sallevel</span><br><span class="line">   from (</span><br><span class="line">     select ename , empno , deptno , ifnull((sal + comm),sal) as earn ,mgr </span><br><span class="line">     from emp</span><br><span class="line">     where sal &gt; (</span><br><span class="line">       select avg(sal)</span><br><span class="line">       from emp</span><br><span class="line">     )</span><br><span class="line">   ) as king </span><br><span class="line">   left join dept on king.deptno=dept.deptno </span><br><span class="line">   left join (</span><br><span class="line">     select empno,</span><br><span class="line">     ename</span><br><span class="line">     from emp</span><br><span class="line">   ) e1 on king.mgr = e1.empno</span><br><span class="line">   cross join salgrade as s where earn Between losal and hisal ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-1"><a href="#5-1" class="headerlink" title="5"></a>5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select </span><br><span class="line">king.ename,</span><br><span class="line">king.empno,</span><br><span class="line">e1.ename as leader,</span><br><span class="line">king.earn,</span><br><span class="line">s.grade</span><br><span class="line">as sallevel</span><br><span class="line">from (</span><br><span class="line">  select ename , empno , deptno , ifnull((sal + comm),sal) as earn ,mgr </span><br><span class="line">  from emp</span><br><span class="line">  where sal &gt; (</span><br><span class="line">    select avg(sal)</span><br><span class="line">    from emp</span><br><span class="line">  )</span><br><span class="line">) as king </span><br><span class="line">left join dept on king.deptno=dept.deptno </span><br><span class="line">left join (</span><br><span class="line">  select empno,</span><br><span class="line">  ename</span><br><span class="line">  from emp</span><br><span class="line">) e1 on king.mgr = e1.empno</span><br><span class="line">left join salgrade as s on earn &gt;= losal and earn &lt;= hisal;</span><br></pre></td></tr></table></figure><h2 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h2><ul><li>列出薪金  高于  在各自部门工作的员工的平均薪金的员工姓名和薪金、部门名称</li><li>条件 ： 各个部门，<code>薪金</code>高于<code>各个部门</code>的<code>平均薪金</code></li></ul><h3 id="1-8"><a href="#1-8" class="headerlink" title="1"></a>1</h3><ul><li><p>我们可以先获取薪金，以及部门编号 ，并且按照他们进行划分</p></li><li><p>因为题目中主要要求的就是部门以及薪金</p></li><li><p><code>select  sal ,deptno from emp group by sal , deptno;</code></p></li><li><p>接下来我们求各个部门的平均薪金</p></li><li><p><code>select avg(sal) as sal_avg, deptno from (select  sal ,deptno from emp group by sal , deptno) as king group by deptno;</code></p></li><li><p>其实上述两部可以通过一步完成</p></li><li><p><code>select avg(sal) ,deptno from emp group by deptno;</code></p></li><li><p>就是不动脑子和动脑子的区别</p></li><li><p>不过一般没思路的时候把数据源写上，可能会有奇效</p></li><li><p>接下来找出高于平均薪金的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from (select avg(sal) as sal_avg, deptno from (select  sal ,deptno from emp group by sal , deptno) as king group by deptno) as avg_basic left join emp</span><br><span class="line">on emp.deptno=avg_basic.deptno  and emp.sal &gt; avg_basic.sal_avg;</span><br></pre></td></tr></table></figure></li><li><p>这个是用左连接来实现的</p></li><li><p>其实还可以要用where来实现 , 不过比较复杂 ，就不在这里写了</p></li><li><p>接下来我们就合并部门输出就可以了</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select  * </span><br><span class="line">from  </span><br><span class="line">(select</span><br><span class="line">*</span><br><span class="line">from (select avg(sal) as sal_avg, deptno as deptno1 from (select  sal ,deptno from emp group by sal , deptno) as king group by deptno) as avg_basic left join emp</span><br><span class="line">on emp.deptno=avg_basic.deptno1  and emp.sal &gt; avg_basic.sal_avg) as basicinfo left  join dept on basicinfo.deptno1=dept.deptno;</span><br></pre></td></tr></table></figure><ul><li>这个可以用in替代</li><li>代码如下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select  * </span><br><span class="line">from  </span><br><span class="line">(select</span><br><span class="line">*</span><br><span class="line">from (select avg(sal) as sal_avg, deptno as deptno1 from (select  sal ,deptno from emp group by sal , deptno) as king group by deptno) as avg_basic left join emp</span><br><span class="line">on emp.deptno=avg_basic.deptno1  and emp.sal &gt; avg_basic.sal_avg) as basicinfo where basicinfo.deptno1 in (select deptno from dept);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>完结撒花！</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>我们做题不可以改变源头数据 ， 就是数据库里的数据</li><li>没有思路的时候可以写题中要的数据 ， 题是做出来的，不是看出来的</li><li>写了第一行 ，自然就会有后面的代码，只是看你愿不愿意开始</li><li>有思路自然是按照自己的思路去做</li><li>在有些时候 left join 可以替换成  in  但是这样的替换是在 没有大于小于判定的时候</li><li>如果有大于小于判定 ，则要替换要用where</li><li>进行in的时候如果出现一行对多行的情况 ，</li><li>不妨把多行化成一行 ，用union</li><li>或者把多余的行删除</li><li>对于分组 ， 我们如果没有思路可以把题中要的东西先分组，然后后面再进行分组</li><li>比如 ： <code>select avg(sal) as sal_avg, deptno from (select  sal ,deptno from emp group by sal , deptno) as king group by deptno;</code></li><li>和 <code>select avg(sal) ,deptno from emp group by deptno;</code></li><li>是一样的，但是对于没有思路的时候来说，还是上面一个更好一点，下面是块，可是有时候会忘，</li><li>对于几乎所有的sql题目</li><li>几乎没有题通过 以下做不出来的 </li><li>就是简单方法和笨方法的区别  ， 笨方法虽然笨 ，可是实用性强 ，简单虽然简单 ，可是难想</li><li>而且笨方法的速度其实主要取决于你的打字速度</li><li>先筛选数据 <code>group by</code> , <code>where</code> , <code>avg ,sum ,max ,min..</code> …</li><li>再筛选数据 <code>group by</code> , <code>where</code> , <code>avg ,sum ,max ,min..</code> …</li><li>通过链接的方式链接 <code>union</code> , <code>union all</code> ,<code> join</code>..</li><li>判断条件 <code>in</code> , <code>where</code> ….</li><li>注意 ： 组函数不可以进行嵌套使用 <code>where max(sal) =1</code> 这样就是不可以的 ，相应的 在in 里也不可以<br> ， 在组函数里也不可以  ，如果非要这样操作 ，那么你要 嵌套表 , 加上别名才可以</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select</span><br><span class="line">*</span><br><span class="line">from(select</span><br><span class="line">max(sal) as max_sal</span><br><span class="line">from emp</span><br><span class="line">) where max_sal =1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>上述那样才可以</li><li>where 和 having是有区别的 作用域的区别，以及位置的区别 ，但是语法是基本上完全一样的 in ， like 之类的 </li><li>where被放在group之前 ，havin 是在group之后</li><li>例子 ：  </li><li><code>select sal as sal1 ,comm  as comm1 from emp where sal1 &gt; 1500; </code></li><li><code>select sal as sal1 ,comm  as comm1 from emp where comm1 in (300);</code></li><li>这样where是读取不到这个别名的 ，但是having是可以读取到的</li><li>原因在于，他们对数据操作的时机不同</li><li>having是上面都执行完了 ，才操作</li><li>where是和他们一起操作的</li><li><code>select sal as sal1 from emp having sal1 &gt;1500;</code></li><li><code>select sal as sal1 from emp having sal in (800);</code></li><li>这样就可以了</li></ul><h1 id="牛客"><a href="#牛客" class="headerlink" title="牛客"></a>牛客</h1><h2 id="现在运营想要了解复旦大学的每个用户在8月份练习的总题目数和回答正确的题目数情况，请取出相应明细数据，对于在8月份没有练习过的用户，答题数结果返回0"><a href="#现在运营想要了解复旦大学的每个用户在8月份练习的总题目数和回答正确的题目数情况，请取出相应明细数据，对于在8月份没有练习过的用户，答题数结果返回0" class="headerlink" title="现在运营想要了解复旦大学的每个用户在8月份练习的总题目数和回答正确的题目数情况，请取出相应明细数据，对于在8月份没有练习过的用户，答题数结果返回0"></a>现在运营想要了解复旦大学的每个用户在8月份练习的总题目数和回答正确的题目数情况，请取出相应明细数据，对于在8月份没有练习过的用户，答题数结果返回0</h2><ul><li>数据源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">drop table if exists `user_profile`;</span><br><span class="line">drop table if  exists `question_practice_detail`;</span><br><span class="line">drop table if  exists `question_detail`;</span><br><span class="line">CREATE TABLE `user_profile` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `device_id` int(11) NOT NULL,</span><br><span class="line">  `gender` varchar(14) NOT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `university` varchar(32) NOT NULL,</span><br><span class="line">  `gpa` float DEFAULT NULL,</span><br><span class="line">  `active_days_within_30` int(11) DEFAULT NULL,</span><br><span class="line">  `question_cnt` int(11) DEFAULT NULL,</span><br><span class="line">  `answer_cnt` int(11) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">CREATE TABLE `question_practice_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`device_id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`result` varchar(32) NOT NULL,</span><br><span class="line">`date` date NOT NULL</span><br><span class="line">);</span><br><span class="line">CREATE TABLE `question_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`difficult_level` varchar(32) NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO user_profile VALUES(1,2138,&#x27;male&#x27;,21,&#x27;北京大学&#x27;,3.4,7,2,12);</span><br><span class="line">INSERT INTO user_profile VALUES(2,3214,&#x27;male&#x27;,null,&#x27;复旦大学&#x27;,4.0,15,5,25);</span><br><span class="line">INSERT INTO user_profile VALUES(3,6543,&#x27;female&#x27;,20,&#x27;北京大学&#x27;,3.2,12,3,30);</span><br><span class="line">INSERT INTO user_profile VALUES(4,2315,&#x27;female&#x27;,23,&#x27;浙江大学&#x27;,3.6,5,1,2);</span><br><span class="line">INSERT INTO user_profile VALUES(5,5432,&#x27;male&#x27;,25,&#x27;山东大学&#x27;,3.8,20,15,70);</span><br><span class="line">INSERT INTO user_profile VALUES(6,2131,&#x27;male&#x27;,28,&#x27;山东大学&#x27;,3.3,15,7,13);</span><br><span class="line">INSERT INTO user_profile VALUES(7,4321,&#x27;male&#x27;,28,&#x27;复旦大学&#x27;,3.6,9,6,52);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(1,2138,111,&#x27;wrong&#x27;,&#x27;2021-05-03&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(2,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(3,3214,113,&#x27;wrong&#x27;,&#x27;2021-06-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(4,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(5,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(6,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(7,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(8,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(9,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(10,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(11,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(12,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(13,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(14,3214,112,&#x27;wrong&#x27;,&#x27;2021-08-16&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(15,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-18&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(16,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(1,111,&#x27;hard&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(2,112,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(3,113,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(4,115,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(5,116,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(6,117,&#x27;easy&#x27;);</span><br></pre></td></tr></table></figure><h2 id="答题"><a href="#答题" class="headerlink" title="答题"></a>答题</h2><ul><li>因为要用大于8月的 ， 所以 直接 用month就好</li><li>用if判断是不是正确</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select </span><br><span class="line">profile.device_id,</span><br><span class="line">university,</span><br><span class="line">count(question_id) as total,</span><br><span class="line">sum(if(result = &#x27;right&#x27; , 1 ,0)) as right_question_cnt</span><br><span class="line">from user_profile as profile left join question_practice_detail as detail on profile.device_id=detail.device_id  and month(detail.date)=8 where university = &#x27;复旦大学&#x27; group by profile.device_id;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>第二种方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select </span><br><span class="line">device_id,</span><br><span class="line">university,</span><br><span class="line">sum(right_question_cnt + wrong_question_cnt) as question_cnt,</span><br><span class="line">sum(right_question_cnt) as right_question_cnt</span><br><span class="line">from(select </span><br><span class="line">device_id,</span><br><span class="line">university,</span><br><span class="line">ifnull((right_question_cnt) , 0) as right_question_cnt,</span><br><span class="line">ifnull((wrong_question_cnt) , 0) as wrong_question_cnt,</span><br><span class="line">ifnull((date) , 0) as date</span><br><span class="line">from user_profile left join (</span><br><span class="line">select device_id as ID,count(*) as right_question_cnt ,date , (device_id - device_id) as wrong_question_cnt from question_practice_detail where result  = &quot;right&quot; group by device_id ,date</span><br><span class="line">union</span><br><span class="line">select device_id,(device_id - device_id) as right_question_cnt,date ,count(*) as wrong_question_cnt  from question_practice_detail where result  = &quot;wrong&quot; group by device_id ,date) as king on king.ID = user_profile.device_id where university = &quot;复旦大学&quot;) as king    </span><br><span class="line">where date &gt; &#x27;2021-08-00&#x27; or date = 0  group by device_id , university ;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ul><li>链接后面的on后面 ，能加上and 进行条件筛选</li><li>month（date） 可以直接获取这个日期的月份</li><li>if（xxx , sss , www） : if表达式 ： 如果前一个为真 ，则执行sss ，如果不是真 则 www</li><li>要看清题意</li></ul><h2 id="现在运营想要了解浙江大学的用户在不同难度题目下答题的正确率情况，请取出相应数据，并按照准确率升序输出。"><a href="#现在运营想要了解浙江大学的用户在不同难度题目下答题的正确率情况，请取出相应数据，并按照准确率升序输出。" class="headerlink" title="现在运营想要了解浙江大学的用户在不同难度题目下答题的正确率情况，请取出相应数据，并按照准确率升序输出。"></a>现在运营想要了解浙江大学的用户在不同难度题目下答题的正确率情况，请取出相应数据，并按照准确率升序输出。</h2><ul><li>数据源<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">drop table if exists `user_profile`;</span><br><span class="line">drop table if  exists `question_practice_detail`;</span><br><span class="line">drop table if  exists `question_detail`;</span><br><span class="line">CREATE TABLE `user_profile` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `device_id` int(11) NOT NULL,</span><br><span class="line">  `gender` varchar(14) NOT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `university` varchar(32) NOT NULL,</span><br><span class="line">  `gpa` float DEFAULT NULL,</span><br><span class="line">  `active_days_within_30` int(11) DEFAULT NULL,</span><br><span class="line">  `question_cnt` int(11) DEFAULT NULL,</span><br><span class="line">  `answer_cnt` int(11) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">CREATE TABLE `question_practice_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`device_id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`result` varchar(32) NOT NULL,</span><br><span class="line">`date` date NOT NULL</span><br><span class="line">);</span><br><span class="line">CREATE TABLE `question_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`difficult_level` varchar(32) NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO user_profile VALUES(1,2138,&#x27;male&#x27;,21,&#x27;北京大学&#x27;,3.4,7,2,12);</span><br><span class="line">INSERT INTO user_profile VALUES(2,3214,&#x27;male&#x27;,null,&#x27;复旦大学&#x27;,4.0,15,5,25);</span><br><span class="line">INSERT INTO user_profile VALUES(3,6543,&#x27;female&#x27;,20,&#x27;北京大学&#x27;,3.2,12,3,30);</span><br><span class="line">INSERT INTO user_profile VALUES(4,2315,&#x27;female&#x27;,23,&#x27;浙江大学&#x27;,3.6,5,1,2);</span><br><span class="line">INSERT INTO user_profile VALUES(4,2316,&#x27;female&#x27;,23,&#x27;浙江大学&#x27;,3.6,5,1,2);</span><br><span class="line">INSERT INTO user_profile VALUES(5,5432,&#x27;male&#x27;,25,&#x27;山东大学&#x27;,3.8,20,15,70);</span><br><span class="line">INSERT INTO user_profile VALUES(6,2131,&#x27;male&#x27;,28,&#x27;山东大学&#x27;,3.3,15,7,13);</span><br><span class="line">INSERT INTO user_profile VALUES(7,4321,&#x27;male&#x27;,28,&#x27;复旦大学&#x27;,3.6,9,6,52);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(1,2138,111,&#x27;wrong&#x27;,&#x27;2021-05-03&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(2,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(3,3214,113,&#x27;wrong&#x27;,&#x27;2021-06-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(4,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(5,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(6,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(7,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(8,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(9,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(10,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(11,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(12,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(13,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(14,3214,112,&#x27;wrong&#x27;,&#x27;2021-08-16&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(15,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-18&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(16,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(1,111,&#x27;hard&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(2,112,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(3,113,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(4,115,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(5,116,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(6,117,&#x27;easy&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select</span><br><span class="line">difficult_level,</span><br><span class="line">(sum(if(result = &#x27;right&#x27; , 1 ,0))/count(up.question_id)) as Rate</span><br><span class="line">from</span><br><span class="line">(select * from question_practice_detail where device_id in (select device_id from user_profile where university = &quot;浙江大学&quot;)) as up left join question_detail on up.question_id = question_detail.question_id group by difficult_level order by Rate;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>优化方法</li><li>把中间筛选浙江大学的地方换成链接 ，并且在链接的时候进行筛选 ， 就会快上给 5-6ms</li><li>如下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SELECT qd.difficult_level,(</span><br><span class="line">SUM(CASE WHEN qpd.result=&#x27;right&#x27; THEN 1</span><br><span class="line">ELSE 0</span><br><span class="line">END</span><br><span class="line">)/COUNT(qpd.result)</span><br><span class="line">) correct_rated</span><br><span class="line">FROM user_profile up,</span><br><span class="line">     question_practice_detail qpd,</span><br><span class="line">     question_detail qd</span><br><span class="line">WHERE     up.university=&#x27;浙江大学&#x27;</span><br><span class="line">      AND up.device_id=qpd.device_id</span><br><span class="line">      AND qpd.question_id=qd.question_id</span><br><span class="line">GROUP BY  qd.difficult_level</span><br><span class="line">order by correct_rated asc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="现在运营想要查看用户在某天刷题后第二天还会再来刷题的平均概率。请你取出相应数据。"><a href="#现在运营想要查看用户在某天刷题后第二天还会再来刷题的平均概率。请你取出相应数据。" class="headerlink" title="现在运营想要查看用户在某天刷题后第二天还会再来刷题的平均概率。请你取出相应数据。"></a>现在运营想要查看用户在某天刷题后第二天还会再来刷题的平均概率。请你取出相应数据。</h2><ul><li>数据源<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">drop table if exists `user_profile`;</span><br><span class="line">drop table if  exists `question_practice_detail`;</span><br><span class="line">drop table if  exists `question_detail`;</span><br><span class="line">CREATE TABLE `user_profile` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `device_id` int(11) NOT NULL,</span><br><span class="line">  `gender` varchar(14) NOT NULL,</span><br><span class="line">  `age` int(11) DEFAULT NULL,</span><br><span class="line">  `university` varchar(32) NOT NULL,</span><br><span class="line">  `gpa` float DEFAULT NULL,</span><br><span class="line">  `active_days_within_30` int(11) DEFAULT NULL,</span><br><span class="line">  `question_cnt` int(11) DEFAULT NULL,</span><br><span class="line">  `answer_cnt` int(11) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">CREATE TABLE `question_practice_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`device_id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`result` varchar(32) NOT NULL,</span><br><span class="line">`date` date NOT NULL</span><br><span class="line">);</span><br><span class="line">CREATE TABLE `question_detail` (</span><br><span class="line">`id` int NOT NULL,</span><br><span class="line">`question_id`int NOT NULL,</span><br><span class="line">`difficult_level` varchar(32) NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO user_profile VALUES(1,2138,&#x27;male&#x27;,21,&#x27;北京大学&#x27;,3.4,7,2,12);</span><br><span class="line">INSERT INTO user_profile VALUES(2,3214,&#x27;male&#x27;,null,&#x27;复旦大学&#x27;,4.0,15,5,25);</span><br><span class="line">INSERT INTO user_profile VALUES(3,6543,&#x27;female&#x27;,20,&#x27;北京大学&#x27;,3.2,12,3,30);</span><br><span class="line">INSERT INTO user_profile VALUES(4,2315,&#x27;female&#x27;,23,&#x27;浙江大学&#x27;,3.6,5,1,2);</span><br><span class="line">INSERT INTO user_profile VALUES(5,5432,&#x27;male&#x27;,25,&#x27;山东大学&#x27;,3.8,20,15,70);</span><br><span class="line">INSERT INTO user_profile VALUES(6,2131,&#x27;male&#x27;,28,&#x27;山东大学&#x27;,3.3,15,7,13);</span><br><span class="line">INSERT INTO user_profile VALUES(7,4321,&#x27;male&#x27;,28,&#x27;复旦大学&#x27;,3.6,9,6,52);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(1,2138,111,&#x27;wrong&#x27;,&#x27;2021-05-03&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(2,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(3,3214,113,&#x27;wrong&#x27;,&#x27;2021-06-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(4,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(5,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(6,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(7,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(8,3214,112,&#x27;wrong&#x27;,&#x27;2021-05-09&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(9,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(10,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(11,2315,115,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(12,2315,116,&#x27;right&#x27;,&#x27;2021-08-14&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(13,2315,117,&#x27;wrong&#x27;,&#x27;2021-08-15&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(14,3214,112,&#x27;wrong&#x27;,&#x27;2021-08-16&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(15,3214,113,&#x27;wrong&#x27;,&#x27;2021-08-18&#x27;);</span><br><span class="line">INSERT INTO question_practice_detail VALUES(16,6543,111,&#x27;right&#x27;,&#x27;2021-08-13&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(1,111,&#x27;hard&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(2,112,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(3,113,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(4,115,&#x27;easy&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(5,116,&#x27;medium&#x27;);</span><br><span class="line">INSERT INTO question_detail VALUES(6,117,&#x27;easy&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">select avg(if(datediff(date2, date1)=1, 1, 0)) as avg_ret</span><br><span class="line">from (</span><br><span class="line">    select</span><br><span class="line">        distinct device_id,</span><br><span class="line">        date as date1,</span><br><span class="line">        lead(date) over (partition by device_id order by date) as date2</span><br><span class="line">    from (</span><br><span class="line">        select distinct device_id, date</span><br><span class="line">        from question_practice_detail</span><br><span class="line">    ) as uniq_id_date</span><br><span class="line">) as id_last_next_date</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E4%BD%9C%E4%B8%9A/">作业</category>
      
      
      
      <comments>http://example.com/2022/11/05/sql%E7%BB%83%E4%B9%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://example.com/2022/11/03/hello-world/</link>
      <guid>http://example.com/2022/11/03/hello-world/</guid>
      <pubDate>Thu, 03 Nov 2022 05:38:31 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2022/11/03/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
